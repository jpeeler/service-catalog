/*
Copyright 2016 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package v1alpha1

import (
	"errors"
	"fmt"
	codec1978 "github.com/ugorji/go/codec"
	pkg2_v1 "k8s.io/kubernetes/pkg/api/v1"
	pkg1_v1 "k8s.io/kubernetes/pkg/apis/meta/v1"
	pkg3_types "k8s.io/kubernetes/pkg/types"
	"reflect"
	"runtime"
	time "time"
)

const (
	// ----- content types ----
	codecSelferC_UTF81234 = 1
	codecSelferC_RAW1234  = 0
	// ----- value types used ----
	codecSelferValueTypeArray1234 = 10
	codecSelferValueTypeMap1234   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey1234    = 2
	codecSelfer_containerMapValue1234  = 3
	codecSelfer_containerMapEnd1234    = 4
	codecSelfer_containerArrayElem1234 = 6
	codecSelfer_containerArrayEnd1234  = 7
)

var (
	codecSelferBitsize1234                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr1234 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelfer1234 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
		var v0 pkg2_v1.ObjectMeta
		var v1 pkg1_v1.TypeMeta
		var v2 pkg3_types.UID
		var v3 time.Time
		_, _, _, _ = v0, v1, v2, v3
	}
}

func (x *Broker) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1 := z.EncBinary()
		_ = yym1
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2 := !z.EncBinary()
			yy2arr2 := z.EncBasicHandle().StructToArray
			var yyq2 [5]bool
			_, _, _ = yysep2, yyq2, yy2arr2
			const yyr2 bool = false
			yyq2[0] = x.Kind != ""
			yyq2[1] = x.APIVersion != ""
			yyq2[2] = true
			var yynn2 int
			if yyr2 || yy2arr2 {
				r.EncodeArrayStart(5)
			} else {
				yynn2 = 2
				for _, b := range yyq2 {
					if b {
						yynn2++
					}
				}
				r.EncodeMapStart(yynn2)
				yynn2 = 0
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[0] {
					yym4 := z.EncBinary()
					_ = yym4
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym5 := z.EncBinary()
					_ = yym5
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[1] {
					yym7 := z.EncBinary()
					_ = yym7
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq2[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym8 := z.EncBinary()
					_ = yym8
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq2[2] {
					yy10 := &x.ObjectMeta
					yy10.CodecEncodeSelf(e)
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq2[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yy11 := &x.ObjectMeta
					yy11.CodecEncodeSelf(e)
				}
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy13 := &x.Spec
				yy13.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("spec"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy14 := &x.Spec
				yy14.CodecEncodeSelf(e)
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy16 := &x.Status
				yy16.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy17 := &x.Status
				yy17.CodecEncodeSelf(e)
			}
			if yyr2 || yy2arr2 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *Broker) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym18 := z.DecBinary()
	_ = yym18
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct19 := r.ContainerType()
		if yyct19 == codecSelferValueTypeMap1234 {
			yyl19 := r.ReadMapStart()
			if yyl19 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl19, d)
			}
		} else if yyct19 == codecSelferValueTypeArray1234 {
			yyl19 := r.ReadArrayStart()
			if yyl19 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl19, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *Broker) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys20Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys20Slc
	var yyhl20 bool = l >= 0
	for yyj20 := 0; ; yyj20++ {
		if yyhl20 {
			if yyj20 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys20Slc = r.DecodeBytes(yys20Slc, true, true)
		yys20 := string(yys20Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys20 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ObjectMeta = pkg2_v1.ObjectMeta{}
			} else {
				yyv23 := &x.ObjectMeta
				yyv23.CodecDecodeSelf(d)
			}
		case "spec":
			if r.TryDecodeAsNil() {
				x.Spec = BrokerSpec{}
			} else {
				yyv24 := &x.Spec
				yyv24.CodecDecodeSelf(d)
			}
		case "status":
			if r.TryDecodeAsNil() {
				x.Status = BrokerStatus{}
			} else {
				yyv25 := &x.Status
				yyv25.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys20)
		} // end switch yys20
	} // end for yyj20
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *Broker) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj26 int
	var yyb26 bool
	var yyhl26 bool = l >= 0
	yyj26++
	if yyhl26 {
		yyb26 = yyj26 > l
	} else {
		yyb26 = r.CheckBreak()
	}
	if yyb26 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj26++
	if yyhl26 {
		yyb26 = yyj26 > l
	} else {
		yyb26 = r.CheckBreak()
	}
	if yyb26 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj26++
	if yyhl26 {
		yyb26 = yyj26 > l
	} else {
		yyb26 = r.CheckBreak()
	}
	if yyb26 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ObjectMeta = pkg2_v1.ObjectMeta{}
	} else {
		yyv29 := &x.ObjectMeta
		yyv29.CodecDecodeSelf(d)
	}
	yyj26++
	if yyhl26 {
		yyb26 = yyj26 > l
	} else {
		yyb26 = r.CheckBreak()
	}
	if yyb26 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Spec = BrokerSpec{}
	} else {
		yyv30 := &x.Spec
		yyv30.CodecDecodeSelf(d)
	}
	yyj26++
	if yyhl26 {
		yyb26 = yyj26 > l
	} else {
		yyb26 = r.CheckBreak()
	}
	if yyb26 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = BrokerStatus{}
	} else {
		yyv31 := &x.Status
		yyv31.CodecDecodeSelf(d)
	}
	for {
		yyj26++
		if yyhl26 {
			yyb26 = yyj26 > l
		} else {
			yyb26 = r.CheckBreak()
		}
		if yyb26 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj26-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *BrokerList) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym32 := z.EncBinary()
		_ = yym32
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep33 := !z.EncBinary()
			yy2arr33 := z.EncBasicHandle().StructToArray
			var yyq33 [4]bool
			_, _, _ = yysep33, yyq33, yy2arr33
			const yyr33 bool = false
			yyq33[0] = x.Kind != ""
			yyq33[1] = x.APIVersion != ""
			yyq33[2] = true
			var yynn33 int
			if yyr33 || yy2arr33 {
				r.EncodeArrayStart(4)
			} else {
				yynn33 = 1
				for _, b := range yyq33 {
					if b {
						yynn33++
					}
				}
				r.EncodeMapStart(yynn33)
				yynn33 = 0
			}
			if yyr33 || yy2arr33 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq33[0] {
					yym35 := z.EncBinary()
					_ = yym35
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq33[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym36 := z.EncBinary()
					_ = yym36
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr33 || yy2arr33 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq33[1] {
					yym38 := z.EncBinary()
					_ = yym38
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq33[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym39 := z.EncBinary()
					_ = yym39
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr33 || yy2arr33 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq33[2] {
					yy41 := &x.ListMeta
					yym42 := z.EncBinary()
					_ = yym42
					if false {
					} else if z.HasExtensions() && z.EncExt(yy41) {
					} else {
						z.EncFallback(yy41)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq33[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("metadata"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yy43 := &x.ListMeta
					yym44 := z.EncBinary()
					_ = yym44
					if false {
					} else if z.HasExtensions() && z.EncExt(yy43) {
					} else {
						z.EncFallback(yy43)
					}
				}
			}
			if yyr33 || yy2arr33 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Items == nil {
					r.EncodeNil()
				} else {
					yym46 := z.EncBinary()
					_ = yym46
					if false {
					} else {
						h.encSliceBroker(([]Broker)(x.Items), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("items"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Items == nil {
					r.EncodeNil()
				} else {
					yym47 := z.EncBinary()
					_ = yym47
					if false {
					} else {
						h.encSliceBroker(([]Broker)(x.Items), e)
					}
				}
			}
			if yyr33 || yy2arr33 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *BrokerList) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym48 := z.DecBinary()
	_ = yym48
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct49 := r.ContainerType()
		if yyct49 == codecSelferValueTypeMap1234 {
			yyl49 := r.ReadMapStart()
			if yyl49 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl49, d)
			}
		} else if yyct49 == codecSelferValueTypeArray1234 {
			yyl49 := r.ReadArrayStart()
			if yyl49 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl49, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *BrokerList) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys50Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys50Slc
	var yyhl50 bool = l >= 0
	for yyj50 := 0; ; yyj50++ {
		if yyhl50 {
			if yyj50 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys50Slc = r.DecodeBytes(yys50Slc, true, true)
		yys50 := string(yys50Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys50 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "metadata":
			if r.TryDecodeAsNil() {
				x.ListMeta = pkg1_v1.ListMeta{}
			} else {
				yyv53 := &x.ListMeta
				yym54 := z.DecBinary()
				_ = yym54
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv53) {
				} else {
					z.DecFallback(yyv53, false)
				}
			}
		case "items":
			if r.TryDecodeAsNil() {
				x.Items = nil
			} else {
				yyv55 := &x.Items
				yym56 := z.DecBinary()
				_ = yym56
				if false {
				} else {
					h.decSliceBroker((*[]Broker)(yyv55), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys50)
		} // end switch yys50
	} // end for yyj50
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *BrokerList) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj57 int
	var yyb57 bool
	var yyhl57 bool = l >= 0
	yyj57++
	if yyhl57 {
		yyb57 = yyj57 > l
	} else {
		yyb57 = r.CheckBreak()
	}
	if yyb57 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj57++
	if yyhl57 {
		yyb57 = yyj57 > l
	} else {
		yyb57 = r.CheckBreak()
	}
	if yyb57 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj57++
	if yyhl57 {
		yyb57 = yyj57 > l
	} else {
		yyb57 = r.CheckBreak()
	}
	if yyb57 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ListMeta = pkg1_v1.ListMeta{}
	} else {
		yyv60 := &x.ListMeta
		yym61 := z.DecBinary()
		_ = yym61
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv60) {
		} else {
			z.DecFallback(yyv60, false)
		}
	}
	yyj57++
	if yyhl57 {
		yyb57 = yyj57 > l
	} else {
		yyb57 = r.CheckBreak()
	}
	if yyb57 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Items = nil
	} else {
		yyv62 := &x.Items
		yym63 := z.DecBinary()
		_ = yym63
		if false {
		} else {
			h.decSliceBroker((*[]Broker)(yyv62), d)
		}
	}
	for {
		yyj57++
		if yyhl57 {
			yyb57 = yyj57 > l
		} else {
			yyb57 = r.CheckBreak()
		}
		if yyb57 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj57-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *BrokerSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym64 := z.EncBinary()
		_ = yym64
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep65 := !z.EncBinary()
			yy2arr65 := z.EncBasicHandle().StructToArray
			var yyq65 [4]bool
			_, _, _ = yysep65, yyq65, yy2arr65
			const yyr65 bool = false
			var yynn65 int
			if yyr65 || yy2arr65 {
				r.EncodeArrayStart(4)
			} else {
				yynn65 = 4
				for _, b := range yyq65 {
					if b {
						yynn65++
					}
				}
				r.EncodeMapStart(yynn65)
				yynn65 = 0
			}
			if yyr65 || yy2arr65 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym67 := z.EncBinary()
				_ = yym67
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.URL))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("url"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym68 := z.EncBinary()
				_ = yym68
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.URL))
				}
			}
			if yyr65 || yy2arr65 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym70 := z.EncBinary()
				_ = yym70
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.AuthUsername))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("authUsername"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym71 := z.EncBinary()
				_ = yym71
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.AuthUsername))
				}
			}
			if yyr65 || yy2arr65 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym73 := z.EncBinary()
				_ = yym73
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.AuthPassword))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("authPassword"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym74 := z.EncBinary()
				_ = yym74
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.AuthPassword))
				}
			}
			if yyr65 || yy2arr65 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym76 := z.EncBinary()
				_ = yym76
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("osbGuid"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym77 := z.EncBinary()
				_ = yym77
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			}
			if yyr65 || yy2arr65 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *BrokerSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym78 := z.DecBinary()
	_ = yym78
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct79 := r.ContainerType()
		if yyct79 == codecSelferValueTypeMap1234 {
			yyl79 := r.ReadMapStart()
			if yyl79 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl79, d)
			}
		} else if yyct79 == codecSelferValueTypeArray1234 {
			yyl79 := r.ReadArrayStart()
			if yyl79 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl79, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *BrokerSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys80Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys80Slc
	var yyhl80 bool = l >= 0
	for yyj80 := 0; ; yyj80++ {
		if yyhl80 {
			if yyj80 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys80Slc = r.DecodeBytes(yys80Slc, true, true)
		yys80 := string(yys80Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys80 {
		case "url":
			if r.TryDecodeAsNil() {
				x.URL = ""
			} else {
				x.URL = string(r.DecodeString())
			}
		case "authUsername":
			if r.TryDecodeAsNil() {
				x.AuthUsername = ""
			} else {
				x.AuthUsername = string(r.DecodeString())
			}
		case "authPassword":
			if r.TryDecodeAsNil() {
				x.AuthPassword = ""
			} else {
				x.AuthPassword = string(r.DecodeString())
			}
		case "osbGuid":
			if r.TryDecodeAsNil() {
				x.OSBGUID = ""
			} else {
				x.OSBGUID = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys80)
		} // end switch yys80
	} // end for yyj80
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *BrokerSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj85 int
	var yyb85 bool
	var yyhl85 bool = l >= 0
	yyj85++
	if yyhl85 {
		yyb85 = yyj85 > l
	} else {
		yyb85 = r.CheckBreak()
	}
	if yyb85 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.URL = ""
	} else {
		x.URL = string(r.DecodeString())
	}
	yyj85++
	if yyhl85 {
		yyb85 = yyj85 > l
	} else {
		yyb85 = r.CheckBreak()
	}
	if yyb85 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.AuthUsername = ""
	} else {
		x.AuthUsername = string(r.DecodeString())
	}
	yyj85++
	if yyhl85 {
		yyb85 = yyj85 > l
	} else {
		yyb85 = r.CheckBreak()
	}
	if yyb85 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.AuthPassword = ""
	} else {
		x.AuthPassword = string(r.DecodeString())
	}
	yyj85++
	if yyhl85 {
		yyb85 = yyj85 > l
	} else {
		yyb85 = r.CheckBreak()
	}
	if yyb85 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBGUID = ""
	} else {
		x.OSBGUID = string(r.DecodeString())
	}
	for {
		yyj85++
		if yyhl85 {
			yyb85 = yyj85 > l
		} else {
			yyb85 = r.CheckBreak()
		}
		if yyb85 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj85-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *BrokerStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym90 := z.EncBinary()
		_ = yym90
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep91 := !z.EncBinary()
			yy2arr91 := z.EncBasicHandle().StructToArray
			var yyq91 [1]bool
			_, _, _ = yysep91, yyq91, yy2arr91
			const yyr91 bool = false
			var yynn91 int
			if yyr91 || yy2arr91 {
				r.EncodeArrayStart(1)
			} else {
				yynn91 = 1
				for _, b := range yyq91 {
					if b {
						yynn91++
					}
				}
				r.EncodeMapStart(yynn91)
				yynn91 = 0
			}
			if yyr91 || yy2arr91 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Conditions == nil {
					r.EncodeNil()
				} else {
					yym93 := z.EncBinary()
					_ = yym93
					if false {
					} else {
						h.encSliceBrokerCondition(([]BrokerCondition)(x.Conditions), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("conditions"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Conditions == nil {
					r.EncodeNil()
				} else {
					yym94 := z.EncBinary()
					_ = yym94
					if false {
					} else {
						h.encSliceBrokerCondition(([]BrokerCondition)(x.Conditions), e)
					}
				}
			}
			if yyr91 || yy2arr91 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *BrokerStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym95 := z.DecBinary()
	_ = yym95
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct96 := r.ContainerType()
		if yyct96 == codecSelferValueTypeMap1234 {
			yyl96 := r.ReadMapStart()
			if yyl96 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl96, d)
			}
		} else if yyct96 == codecSelferValueTypeArray1234 {
			yyl96 := r.ReadArrayStart()
			if yyl96 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl96, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *BrokerStatus) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys97Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys97Slc
	var yyhl97 bool = l >= 0
	for yyj97 := 0; ; yyj97++ {
		if yyhl97 {
			if yyj97 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys97Slc = r.DecodeBytes(yys97Slc, true, true)
		yys97 := string(yys97Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys97 {
		case "conditions":
			if r.TryDecodeAsNil() {
				x.Conditions = nil
			} else {
				yyv98 := &x.Conditions
				yym99 := z.DecBinary()
				_ = yym99
				if false {
				} else {
					h.decSliceBrokerCondition((*[]BrokerCondition)(yyv98), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys97)
		} // end switch yys97
	} // end for yyj97
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *BrokerStatus) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj100 int
	var yyb100 bool
	var yyhl100 bool = l >= 0
	yyj100++
	if yyhl100 {
		yyb100 = yyj100 > l
	} else {
		yyb100 = r.CheckBreak()
	}
	if yyb100 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Conditions = nil
	} else {
		yyv101 := &x.Conditions
		yym102 := z.DecBinary()
		_ = yym102
		if false {
		} else {
			h.decSliceBrokerCondition((*[]BrokerCondition)(yyv101), d)
		}
	}
	for {
		yyj100++
		if yyhl100 {
			yyb100 = yyj100 > l
		} else {
			yyb100 = r.CheckBreak()
		}
		if yyb100 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj100-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *BrokerCondition) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym103 := z.EncBinary()
		_ = yym103
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep104 := !z.EncBinary()
			yy2arr104 := z.EncBasicHandle().StructToArray
			var yyq104 [4]bool
			_, _, _ = yysep104, yyq104, yy2arr104
			const yyr104 bool = false
			var yynn104 int
			if yyr104 || yy2arr104 {
				r.EncodeArrayStart(4)
			} else {
				yynn104 = 4
				for _, b := range yyq104 {
					if b {
						yynn104++
					}
				}
				r.EncodeMapStart(yynn104)
				yynn104 = 0
			}
			if yyr104 || yy2arr104 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				x.Type.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("type"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				x.Type.CodecEncodeSelf(e)
			}
			if yyr104 || yy2arr104 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				x.Status.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				x.Status.CodecEncodeSelf(e)
			}
			if yyr104 || yy2arr104 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym108 := z.EncBinary()
				_ = yym108
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Reason))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("reason"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym109 := z.EncBinary()
				_ = yym109
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Reason))
				}
			}
			if yyr104 || yy2arr104 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym111 := z.EncBinary()
				_ = yym111
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Message))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("message"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym112 := z.EncBinary()
				_ = yym112
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Message))
				}
			}
			if yyr104 || yy2arr104 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *BrokerCondition) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym113 := z.DecBinary()
	_ = yym113
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct114 := r.ContainerType()
		if yyct114 == codecSelferValueTypeMap1234 {
			yyl114 := r.ReadMapStart()
			if yyl114 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl114, d)
			}
		} else if yyct114 == codecSelferValueTypeArray1234 {
			yyl114 := r.ReadArrayStart()
			if yyl114 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl114, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *BrokerCondition) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys115Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys115Slc
	var yyhl115 bool = l >= 0
	for yyj115 := 0; ; yyj115++ {
		if yyhl115 {
			if yyj115 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys115Slc = r.DecodeBytes(yys115Slc, true, true)
		yys115 := string(yys115Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys115 {
		case "type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				x.Type = BrokerConditionType(r.DecodeString())
			}
		case "status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = ConditionStatus(r.DecodeString())
			}
		case "reason":
			if r.TryDecodeAsNil() {
				x.Reason = ""
			} else {
				x.Reason = string(r.DecodeString())
			}
		case "message":
			if r.TryDecodeAsNil() {
				x.Message = ""
			} else {
				x.Message = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys115)
		} // end switch yys115
	} // end for yyj115
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *BrokerCondition) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj120 int
	var yyb120 bool
	var yyhl120 bool = l >= 0
	yyj120++
	if yyhl120 {
		yyb120 = yyj120 > l
	} else {
		yyb120 = r.CheckBreak()
	}
	if yyb120 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		x.Type = BrokerConditionType(r.DecodeString())
	}
	yyj120++
	if yyhl120 {
		yyb120 = yyj120 > l
	} else {
		yyb120 = r.CheckBreak()
	}
	if yyb120 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = ConditionStatus(r.DecodeString())
	}
	yyj120++
	if yyhl120 {
		yyb120 = yyj120 > l
	} else {
		yyb120 = r.CheckBreak()
	}
	if yyb120 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Reason = ""
	} else {
		x.Reason = string(r.DecodeString())
	}
	yyj120++
	if yyhl120 {
		yyb120 = yyj120 > l
	} else {
		yyb120 = r.CheckBreak()
	}
	if yyb120 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Message = ""
	} else {
		x.Message = string(r.DecodeString())
	}
	for {
		yyj120++
		if yyhl120 {
			yyb120 = yyj120 > l
		} else {
			yyb120 = r.CheckBreak()
		}
		if yyb120 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj120-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x BrokerConditionType) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	yym125 := z.EncBinary()
	_ = yym125
	if false {
	} else if z.HasExtensions() && z.EncExt(x) {
	} else {
		r.EncodeString(codecSelferC_UTF81234, string(x))
	}
}

func (x *BrokerConditionType) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym126 := z.DecBinary()
	_ = yym126
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		*((*string)(x)) = r.DecodeString()
	}
}

func (x ConditionStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	yym127 := z.EncBinary()
	_ = yym127
	if false {
	} else if z.HasExtensions() && z.EncExt(x) {
	} else {
		r.EncodeString(codecSelferC_UTF81234, string(x))
	}
}

func (x *ConditionStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym128 := z.DecBinary()
	_ = yym128
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		*((*string)(x)) = r.DecodeString()
	}
}

func (x *ServiceClassList) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym129 := z.EncBinary()
		_ = yym129
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep130 := !z.EncBinary()
			yy2arr130 := z.EncBasicHandle().StructToArray
			var yyq130 [5]bool
			_, _, _ = yysep130, yyq130, yy2arr130
			const yyr130 bool = false
			yyq130[0] = x.Kind != ""
			yyq130[1] = x.APIVersion != ""
			yyq130[2] = x.SelfLink != ""
			yyq130[3] = x.ResourceVersion != ""
			var yynn130 int
			if yyr130 || yy2arr130 {
				r.EncodeArrayStart(5)
			} else {
				yynn130 = 1
				for _, b := range yyq130 {
					if b {
						yynn130++
					}
				}
				r.EncodeMapStart(yynn130)
				yynn130 = 0
			}
			if yyr130 || yy2arr130 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq130[0] {
					yym132 := z.EncBinary()
					_ = yym132
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq130[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym133 := z.EncBinary()
					_ = yym133
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr130 || yy2arr130 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq130[1] {
					yym135 := z.EncBinary()
					_ = yym135
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq130[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym136 := z.EncBinary()
					_ = yym136
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr130 || yy2arr130 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq130[2] {
					yym138 := z.EncBinary()
					_ = yym138
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq130[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym139 := z.EncBinary()
					_ = yym139
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr130 || yy2arr130 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq130[3] {
					yym141 := z.EncBinary()
					_ = yym141
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq130[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym142 := z.EncBinary()
					_ = yym142
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr130 || yy2arr130 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Items == nil {
					r.EncodeNil()
				} else {
					yym144 := z.EncBinary()
					_ = yym144
					if false {
					} else {
						h.encSliceServiceClass(([]ServiceClass)(x.Items), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Items"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Items == nil {
					r.EncodeNil()
				} else {
					yym145 := z.EncBinary()
					_ = yym145
					if false {
					} else {
						h.encSliceServiceClass(([]ServiceClass)(x.Items), e)
					}
				}
			}
			if yyr130 || yy2arr130 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *ServiceClassList) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym146 := z.DecBinary()
	_ = yym146
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct147 := r.ContainerType()
		if yyct147 == codecSelferValueTypeMap1234 {
			yyl147 := r.ReadMapStart()
			if yyl147 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl147, d)
			}
		} else if yyct147 == codecSelferValueTypeArray1234 {
			yyl147 := r.ReadArrayStart()
			if yyl147 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl147, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *ServiceClassList) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys148Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys148Slc
	var yyhl148 bool = l >= 0
	for yyj148 := 0; ; yyj148++ {
		if yyhl148 {
			if yyj148 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys148Slc = r.DecodeBytes(yys148Slc, true, true)
		yys148 := string(yys148Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys148 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "Items":
			if r.TryDecodeAsNil() {
				x.Items = nil
			} else {
				yyv153 := &x.Items
				yym154 := z.DecBinary()
				_ = yym154
				if false {
				} else {
					h.decSliceServiceClass((*[]ServiceClass)(yyv153), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys148)
		} // end switch yys148
	} // end for yyj148
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *ServiceClassList) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj155 int
	var yyb155 bool
	var yyhl155 bool = l >= 0
	yyj155++
	if yyhl155 {
		yyb155 = yyj155 > l
	} else {
		yyb155 = r.CheckBreak()
	}
	if yyb155 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj155++
	if yyhl155 {
		yyb155 = yyj155 > l
	} else {
		yyb155 = r.CheckBreak()
	}
	if yyb155 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj155++
	if yyhl155 {
		yyb155 = yyj155 > l
	} else {
		yyb155 = r.CheckBreak()
	}
	if yyb155 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj155++
	if yyhl155 {
		yyb155 = yyj155 > l
	} else {
		yyb155 = r.CheckBreak()
	}
	if yyb155 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj155++
	if yyhl155 {
		yyb155 = yyj155 > l
	} else {
		yyb155 = r.CheckBreak()
	}
	if yyb155 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Items = nil
	} else {
		yyv160 := &x.Items
		yym161 := z.DecBinary()
		_ = yym161
		if false {
		} else {
			h.decSliceServiceClass((*[]ServiceClass)(yyv160), d)
		}
	}
	for {
		yyj155++
		if yyhl155 {
			yyb155 = yyj155 > l
		} else {
			yyb155 = r.CheckBreak()
		}
		if yyb155 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj155-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *ServiceClass) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym162 := z.EncBinary()
		_ = yym162
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep163 := !z.EncBinary()
			yy2arr163 := z.EncBasicHandle().StructToArray
			var yyq163 [29]bool
			_, _, _ = yysep163, yyq163, yy2arr163
			const yyr163 bool = false
			yyq163[0] = x.Kind != ""
			yyq163[1] = x.APIVersion != ""
			yyq163[2] = x.Name != ""
			yyq163[3] = x.GenerateName != ""
			yyq163[4] = x.Namespace != ""
			yyq163[5] = x.SelfLink != ""
			yyq163[6] = x.UID != ""
			yyq163[7] = x.ResourceVersion != ""
			yyq163[8] = x.Generation != 0
			yyq163[9] = true
			yyq163[10] = x.ObjectMeta.DeletionTimestamp != nil && x.DeletionTimestamp != nil
			yyq163[11] = x.ObjectMeta.DeletionGracePeriodSeconds != nil && x.DeletionGracePeriodSeconds != nil
			yyq163[12] = len(x.Labels) != 0
			yyq163[13] = len(x.Annotations) != 0
			yyq163[14] = len(x.OwnerReferences) != 0
			yyq163[15] = len(x.Finalizers) != 0
			yyq163[16] = x.ClusterName != ""
			var yynn163 int
			if yyr163 || yy2arr163 {
				r.EncodeArrayStart(29)
			} else {
				yynn163 = 12
				for _, b := range yyq163 {
					if b {
						yynn163++
					}
				}
				r.EncodeMapStart(yynn163)
				yynn163 = 0
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[0] {
					yym165 := z.EncBinary()
					_ = yym165
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym166 := z.EncBinary()
					_ = yym166
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[1] {
					yym168 := z.EncBinary()
					_ = yym168
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym169 := z.EncBinary()
					_ = yym169
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[2] {
					yym171 := z.EncBinary()
					_ = yym171
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("name"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym172 := z.EncBinary()
					_ = yym172
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[3] {
					yym174 := z.EncBinary()
					_ = yym174
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generateName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym175 := z.EncBinary()
					_ = yym175
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[4] {
					yym177 := z.EncBinary()
					_ = yym177
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("namespace"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym178 := z.EncBinary()
					_ = yym178
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[5] {
					yym180 := z.EncBinary()
					_ = yym180
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym181 := z.EncBinary()
					_ = yym181
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[6] {
					yym183 := z.EncBinary()
					_ = yym183
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("uid"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym184 := z.EncBinary()
					_ = yym184
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[7] {
					yym186 := z.EncBinary()
					_ = yym186
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym187 := z.EncBinary()
					_ = yym187
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[8] {
					yym189 := z.EncBinary()
					_ = yym189
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				} else {
					r.EncodeInt(0)
				}
			} else {
				if yyq163[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generation"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym190 := z.EncBinary()
					_ = yym190
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[9] {
					yy192 := &x.CreationTimestamp
					yym193 := z.EncBinary()
					_ = yym193
					if false {
					} else if z.HasExtensions() && z.EncExt(yy192) {
					} else if yym193 {
						z.EncBinaryMarshal(yy192)
					} else if !yym193 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy192)
					} else {
						z.EncFallback(yy192)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq163[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("creationTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yy194 := &x.CreationTimestamp
					yym195 := z.EncBinary()
					_ = yym195
					if false {
					} else if z.HasExtensions() && z.EncExt(yy194) {
					} else if yym195 {
						z.EncBinaryMarshal(yy194)
					} else if !yym195 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy194)
					} else {
						z.EncFallback(yy194)
					}
				}
			}
			var yyn196 bool
			if x.ObjectMeta.DeletionTimestamp == nil {
				yyn196 = true
				goto LABEL196
			}
		LABEL196:
			if yyr163 || yy2arr163 {
				if yyn196 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq163[10] {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym197 := z.EncBinary()
							_ = yym197
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym197 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym197 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq163[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn196 {
						r.EncodeNil()
					} else {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym198 := z.EncBinary()
							_ = yym198
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym198 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym198 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					}
				}
			}
			var yyn199 bool
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				yyn199 = true
				goto LABEL199
			}
		LABEL199:
			if yyr163 || yy2arr163 {
				if yyn199 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq163[11] {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy200 := *x.DeletionGracePeriodSeconds
							yym201 := z.EncBinary()
							_ = yym201
							if false {
							} else {
								r.EncodeInt(int64(yy200))
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq163[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionGracePeriodSeconds"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn199 {
						r.EncodeNil()
					} else {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy202 := *x.DeletionGracePeriodSeconds
							yym203 := z.EncBinary()
							_ = yym203
							if false {
							} else {
								r.EncodeInt(int64(yy202))
							}
						}
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[12] {
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym205 := z.EncBinary()
						_ = yym205
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq163[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("labels"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym206 := z.EncBinary()
						_ = yym206
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[13] {
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym208 := z.EncBinary()
						_ = yym208
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq163[13] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("annotations"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym209 := z.EncBinary()
						_ = yym209
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[14] {
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym211 := z.EncBinary()
						_ = yym211
						if false {
						} else {
							h.encSlicev1_OwnerReference(([]pkg2_v1.OwnerReference)(x.OwnerReferences), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq163[14] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("ownerReferences"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym212 := z.EncBinary()
						_ = yym212
						if false {
						} else {
							h.encSlicev1_OwnerReference(([]pkg2_v1.OwnerReference)(x.OwnerReferences), e)
						}
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[15] {
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym214 := z.EncBinary()
						_ = yym214
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq163[15] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("finalizers"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym215 := z.EncBinary()
						_ = yym215
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq163[16] {
					yym217 := z.EncBinary()
					_ = yym217
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ClusterName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq163[16] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("clusterName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym218 := z.EncBinary()
					_ = yym218
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ClusterName))
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym220 := z.EncBinary()
				_ = yym220
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.BrokerName))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("BrokerName"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym221 := z.EncBinary()
				_ = yym221
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.BrokerName))
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym223 := z.EncBinary()
				_ = yym223
				if false {
				} else {
					r.EncodeBool(bool(x.Bindable))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Bindable"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym224 := z.EncBinary()
				_ = yym224
				if false {
				} else {
					r.EncodeBool(bool(x.Bindable))
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Plans == nil {
					r.EncodeNil()
				} else {
					yym226 := z.EncBinary()
					_ = yym226
					if false {
					} else {
						h.encSliceServicePlan(([]ServicePlan)(x.Plans), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Plans"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Plans == nil {
					r.EncodeNil()
				} else {
					yym227 := z.EncBinary()
					_ = yym227
					if false {
					} else {
						h.encSliceServicePlan(([]ServicePlan)(x.Plans), e)
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym229 := z.EncBinary()
				_ = yym229
				if false {
				} else {
					r.EncodeBool(bool(x.PlanUpdatable))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("PlanUpdatable"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym230 := z.EncBinary()
				_ = yym230
				if false {
				} else {
					r.EncodeBool(bool(x.PlanUpdatable))
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym232 := z.EncBinary()
				_ = yym232
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBGUID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym233 := z.EncBinary()
				_ = yym233
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.OSBTags == nil {
					r.EncodeNil()
				} else {
					yym235 := z.EncBinary()
					_ = yym235
					if false {
					} else {
						z.F.EncSliceStringV(x.OSBTags, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBTags"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.OSBTags == nil {
					r.EncodeNil()
				} else {
					yym236 := z.EncBinary()
					_ = yym236
					if false {
					} else {
						z.F.EncSliceStringV(x.OSBTags, false, e)
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.OSBRequires == nil {
					r.EncodeNil()
				} else {
					yym238 := z.EncBinary()
					_ = yym238
					if false {
					} else {
						z.F.EncSliceStringV(x.OSBRequires, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBRequires"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.OSBRequires == nil {
					r.EncodeNil()
				} else {
					yym239 := z.EncBinary()
					_ = yym239
					if false {
					} else {
						z.F.EncSliceStringV(x.OSBRequires, false, e)
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym241 := z.EncBinary()
				_ = yym241
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBMaxDBPerNode))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBMaxDBPerNode"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym242 := z.EncBinary()
				_ = yym242
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBMaxDBPerNode))
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.OSBMetadata == nil {
					r.EncodeNil()
				} else {
					yym244 := z.EncBinary()
					_ = yym244
					if false {
					} else {
						z.EncFallback(x.OSBMetadata)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBMetadata"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.OSBMetadata == nil {
					r.EncodeNil()
				} else {
					yym245 := z.EncBinary()
					_ = yym245
					if false {
					} else {
						z.EncFallback(x.OSBMetadata)
					}
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym247 := z.EncBinary()
				_ = yym247
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBDashboardOAuth2ClientID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBDashboardOAuth2ClientID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym248 := z.EncBinary()
				_ = yym248
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBDashboardOAuth2ClientID))
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym250 := z.EncBinary()
				_ = yym250
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBDashboardSecret))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBDashboardSecret"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym251 := z.EncBinary()
				_ = yym251
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBDashboardSecret))
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym253 := z.EncBinary()
				_ = yym253
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBDashboardRedirectURI))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBDashboardRedirectURI"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym254 := z.EncBinary()
				_ = yym254
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBDashboardRedirectURI))
				}
			}
			if yyr163 || yy2arr163 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *ServiceClass) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym255 := z.DecBinary()
	_ = yym255
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct256 := r.ContainerType()
		if yyct256 == codecSelferValueTypeMap1234 {
			yyl256 := r.ReadMapStart()
			if yyl256 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl256, d)
			}
		} else if yyct256 == codecSelferValueTypeArray1234 {
			yyl256 := r.ReadArrayStart()
			if yyl256 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl256, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *ServiceClass) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys257Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys257Slc
	var yyhl257 bool = l >= 0
	for yyj257 := 0; ; yyj257++ {
		if yyhl257 {
			if yyj257 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys257Slc = r.DecodeBytes(yys257Slc, true, true)
		yys257 := string(yys257Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys257 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "generateName":
			if r.TryDecodeAsNil() {
				x.GenerateName = ""
			} else {
				x.GenerateName = string(r.DecodeString())
			}
		case "namespace":
			if r.TryDecodeAsNil() {
				x.Namespace = ""
			} else {
				x.Namespace = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "uid":
			if r.TryDecodeAsNil() {
				x.UID = ""
			} else {
				x.UID = pkg3_types.UID(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "generation":
			if r.TryDecodeAsNil() {
				x.Generation = 0
			} else {
				x.Generation = int64(r.DecodeInt(64))
			}
		case "creationTimestamp":
			if r.TryDecodeAsNil() {
				x.CreationTimestamp = pkg1_v1.Time{}
			} else {
				yyv267 := &x.CreationTimestamp
				yym268 := z.DecBinary()
				_ = yym268
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv267) {
				} else if yym268 {
					z.DecBinaryUnmarshal(yyv267)
				} else if !yym268 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv267)
				} else {
					z.DecFallback(yyv267, false)
				}
			}
		case "deletionTimestamp":
			if x.ObjectMeta.DeletionTimestamp == nil {
				x.ObjectMeta.DeletionTimestamp = new(pkg1_v1.Time)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionTimestamp != nil {
					x.DeletionTimestamp = nil
				}
			} else {
				if x.DeletionTimestamp == nil {
					x.DeletionTimestamp = new(pkg1_v1.Time)
				}
				yym270 := z.DecBinary()
				_ = yym270
				if false {
				} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
				} else if yym270 {
					z.DecBinaryUnmarshal(x.DeletionTimestamp)
				} else if !yym270 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.DeletionTimestamp)
				} else {
					z.DecFallback(x.DeletionTimestamp, false)
				}
			}
		case "deletionGracePeriodSeconds":
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionGracePeriodSeconds != nil {
					x.DeletionGracePeriodSeconds = nil
				}
			} else {
				if x.DeletionGracePeriodSeconds == nil {
					x.DeletionGracePeriodSeconds = new(int64)
				}
				yym272 := z.DecBinary()
				_ = yym272
				if false {
				} else {
					*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
				}
			}
		case "labels":
			if r.TryDecodeAsNil() {
				x.Labels = nil
			} else {
				yyv273 := &x.Labels
				yym274 := z.DecBinary()
				_ = yym274
				if false {
				} else {
					z.F.DecMapStringStringX(yyv273, false, d)
				}
			}
		case "annotations":
			if r.TryDecodeAsNil() {
				x.Annotations = nil
			} else {
				yyv275 := &x.Annotations
				yym276 := z.DecBinary()
				_ = yym276
				if false {
				} else {
					z.F.DecMapStringStringX(yyv275, false, d)
				}
			}
		case "ownerReferences":
			if r.TryDecodeAsNil() {
				x.OwnerReferences = nil
			} else {
				yyv277 := &x.OwnerReferences
				yym278 := z.DecBinary()
				_ = yym278
				if false {
				} else {
					h.decSlicev1_OwnerReference((*[]pkg2_v1.OwnerReference)(yyv277), d)
				}
			}
		case "finalizers":
			if r.TryDecodeAsNil() {
				x.Finalizers = nil
			} else {
				yyv279 := &x.Finalizers
				yym280 := z.DecBinary()
				_ = yym280
				if false {
				} else {
					z.F.DecSliceStringX(yyv279, false, d)
				}
			}
		case "clusterName":
			if r.TryDecodeAsNil() {
				x.ClusterName = ""
			} else {
				x.ClusterName = string(r.DecodeString())
			}
		case "BrokerName":
			if r.TryDecodeAsNil() {
				x.BrokerName = ""
			} else {
				x.BrokerName = string(r.DecodeString())
			}
		case "Bindable":
			if r.TryDecodeAsNil() {
				x.Bindable = false
			} else {
				x.Bindable = bool(r.DecodeBool())
			}
		case "Plans":
			if r.TryDecodeAsNil() {
				x.Plans = nil
			} else {
				yyv284 := &x.Plans
				yym285 := z.DecBinary()
				_ = yym285
				if false {
				} else {
					h.decSliceServicePlan((*[]ServicePlan)(yyv284), d)
				}
			}
		case "PlanUpdatable":
			if r.TryDecodeAsNil() {
				x.PlanUpdatable = false
			} else {
				x.PlanUpdatable = bool(r.DecodeBool())
			}
		case "OSBGUID":
			if r.TryDecodeAsNil() {
				x.OSBGUID = ""
			} else {
				x.OSBGUID = string(r.DecodeString())
			}
		case "OSBTags":
			if r.TryDecodeAsNil() {
				x.OSBTags = nil
			} else {
				yyv288 := &x.OSBTags
				yym289 := z.DecBinary()
				_ = yym289
				if false {
				} else {
					z.F.DecSliceStringX(yyv288, false, d)
				}
			}
		case "OSBRequires":
			if r.TryDecodeAsNil() {
				x.OSBRequires = nil
			} else {
				yyv290 := &x.OSBRequires
				yym291 := z.DecBinary()
				_ = yym291
				if false {
				} else {
					z.F.DecSliceStringX(yyv290, false, d)
				}
			}
		case "OSBMaxDBPerNode":
			if r.TryDecodeAsNil() {
				x.OSBMaxDBPerNode = ""
			} else {
				x.OSBMaxDBPerNode = string(r.DecodeString())
			}
		case "OSBMetadata":
			if r.TryDecodeAsNil() {
				x.OSBMetadata = nil
			} else {
				yyv293 := &x.OSBMetadata
				yym294 := z.DecBinary()
				_ = yym294
				if false {
				} else {
					z.DecFallback(yyv293, true)
				}
			}
		case "OSBDashboardOAuth2ClientID":
			if r.TryDecodeAsNil() {
				x.OSBDashboardOAuth2ClientID = ""
			} else {
				x.OSBDashboardOAuth2ClientID = string(r.DecodeString())
			}
		case "OSBDashboardSecret":
			if r.TryDecodeAsNil() {
				x.OSBDashboardSecret = ""
			} else {
				x.OSBDashboardSecret = string(r.DecodeString())
			}
		case "OSBDashboardRedirectURI":
			if r.TryDecodeAsNil() {
				x.OSBDashboardRedirectURI = ""
			} else {
				x.OSBDashboardRedirectURI = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys257)
		} // end switch yys257
	} // end for yyj257
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *ServiceClass) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj298 int
	var yyb298 bool
	var yyhl298 bool = l >= 0
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.GenerateName = ""
	} else {
		x.GenerateName = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Namespace = ""
	} else {
		x.Namespace = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.UID = ""
	} else {
		x.UID = pkg3_types.UID(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Generation = 0
	} else {
		x.Generation = int64(r.DecodeInt(64))
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.CreationTimestamp = pkg1_v1.Time{}
	} else {
		yyv308 := &x.CreationTimestamp
		yym309 := z.DecBinary()
		_ = yym309
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv308) {
		} else if yym309 {
			z.DecBinaryUnmarshal(yyv308)
		} else if !yym309 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv308)
		} else {
			z.DecFallback(yyv308, false)
		}
	}
	if x.ObjectMeta.DeletionTimestamp == nil {
		x.ObjectMeta.DeletionTimestamp = new(pkg1_v1.Time)
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionTimestamp != nil {
			x.DeletionTimestamp = nil
		}
	} else {
		if x.DeletionTimestamp == nil {
			x.DeletionTimestamp = new(pkg1_v1.Time)
		}
		yym311 := z.DecBinary()
		_ = yym311
		if false {
		} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
		} else if yym311 {
			z.DecBinaryUnmarshal(x.DeletionTimestamp)
		} else if !yym311 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.DeletionTimestamp)
		} else {
			z.DecFallback(x.DeletionTimestamp, false)
		}
	}
	if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
		x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionGracePeriodSeconds != nil {
			x.DeletionGracePeriodSeconds = nil
		}
	} else {
		if x.DeletionGracePeriodSeconds == nil {
			x.DeletionGracePeriodSeconds = new(int64)
		}
		yym313 := z.DecBinary()
		_ = yym313
		if false {
		} else {
			*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Labels = nil
	} else {
		yyv314 := &x.Labels
		yym315 := z.DecBinary()
		_ = yym315
		if false {
		} else {
			z.F.DecMapStringStringX(yyv314, false, d)
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Annotations = nil
	} else {
		yyv316 := &x.Annotations
		yym317 := z.DecBinary()
		_ = yym317
		if false {
		} else {
			z.F.DecMapStringStringX(yyv316, false, d)
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OwnerReferences = nil
	} else {
		yyv318 := &x.OwnerReferences
		yym319 := z.DecBinary()
		_ = yym319
		if false {
		} else {
			h.decSlicev1_OwnerReference((*[]pkg2_v1.OwnerReference)(yyv318), d)
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Finalizers = nil
	} else {
		yyv320 := &x.Finalizers
		yym321 := z.DecBinary()
		_ = yym321
		if false {
		} else {
			z.F.DecSliceStringX(yyv320, false, d)
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ClusterName = ""
	} else {
		x.ClusterName = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.BrokerName = ""
	} else {
		x.BrokerName = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Bindable = false
	} else {
		x.Bindable = bool(r.DecodeBool())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Plans = nil
	} else {
		yyv325 := &x.Plans
		yym326 := z.DecBinary()
		_ = yym326
		if false {
		} else {
			h.decSliceServicePlan((*[]ServicePlan)(yyv325), d)
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.PlanUpdatable = false
	} else {
		x.PlanUpdatable = bool(r.DecodeBool())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBGUID = ""
	} else {
		x.OSBGUID = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBTags = nil
	} else {
		yyv329 := &x.OSBTags
		yym330 := z.DecBinary()
		_ = yym330
		if false {
		} else {
			z.F.DecSliceStringX(yyv329, false, d)
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBRequires = nil
	} else {
		yyv331 := &x.OSBRequires
		yym332 := z.DecBinary()
		_ = yym332
		if false {
		} else {
			z.F.DecSliceStringX(yyv331, false, d)
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBMaxDBPerNode = ""
	} else {
		x.OSBMaxDBPerNode = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBMetadata = nil
	} else {
		yyv334 := &x.OSBMetadata
		yym335 := z.DecBinary()
		_ = yym335
		if false {
		} else {
			z.DecFallback(yyv334, true)
		}
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBDashboardOAuth2ClientID = ""
	} else {
		x.OSBDashboardOAuth2ClientID = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBDashboardSecret = ""
	} else {
		x.OSBDashboardSecret = string(r.DecodeString())
	}
	yyj298++
	if yyhl298 {
		yyb298 = yyj298 > l
	} else {
		yyb298 = r.CheckBreak()
	}
	if yyb298 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBDashboardRedirectURI = ""
	} else {
		x.OSBDashboardRedirectURI = string(r.DecodeString())
	}
	for {
		yyj298++
		if yyhl298 {
			yyb298 = yyj298 > l
		} else {
			yyb298 = r.CheckBreak()
		}
		if yyb298 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj298-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *ServicePlan) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym339 := z.EncBinary()
		_ = yym339
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep340 := !z.EncBinary()
			yy2arr340 := z.EncBasicHandle().StructToArray
			var yyq340 [4]bool
			_, _, _ = yysep340, yyq340, yy2arr340
			const yyr340 bool = false
			var yynn340 int
			if yyr340 || yy2arr340 {
				r.EncodeArrayStart(4)
			} else {
				yynn340 = 4
				for _, b := range yyq340 {
					if b {
						yynn340++
					}
				}
				r.EncodeMapStart(yynn340)
				yynn340 = 0
			}
			if yyr340 || yy2arr340 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym342 := z.EncBinary()
				_ = yym342
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym343 := z.EncBinary()
				_ = yym343
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Name))
				}
			}
			if yyr340 || yy2arr340 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym345 := z.EncBinary()
				_ = yym345
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBGUID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym346 := z.EncBinary()
				_ = yym346
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			}
			if yyr340 || yy2arr340 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.OSBMetadata == nil {
					r.EncodeNil()
				} else {
					yym348 := z.EncBinary()
					_ = yym348
					if false {
					} else {
						z.EncFallback(x.OSBMetadata)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBMetadata"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.OSBMetadata == nil {
					r.EncodeNil()
				} else {
					yym349 := z.EncBinary()
					_ = yym349
					if false {
					} else {
						z.EncFallback(x.OSBMetadata)
					}
				}
			}
			if yyr340 || yy2arr340 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym351 := z.EncBinary()
				_ = yym351
				if false {
				} else {
					r.EncodeBool(bool(x.OSBFree))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBFree"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym352 := z.EncBinary()
				_ = yym352
				if false {
				} else {
					r.EncodeBool(bool(x.OSBFree))
				}
			}
			if yyr340 || yy2arr340 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *ServicePlan) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym353 := z.DecBinary()
	_ = yym353
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct354 := r.ContainerType()
		if yyct354 == codecSelferValueTypeMap1234 {
			yyl354 := r.ReadMapStart()
			if yyl354 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl354, d)
			}
		} else if yyct354 == codecSelferValueTypeArray1234 {
			yyl354 := r.ReadArrayStart()
			if yyl354 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl354, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *ServicePlan) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys355Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys355Slc
	var yyhl355 bool = l >= 0
	for yyj355 := 0; ; yyj355++ {
		if yyhl355 {
			if yyj355 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys355Slc = r.DecodeBytes(yys355Slc, true, true)
		yys355 := string(yys355Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys355 {
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "OSBGUID":
			if r.TryDecodeAsNil() {
				x.OSBGUID = ""
			} else {
				x.OSBGUID = string(r.DecodeString())
			}
		case "OSBMetadata":
			if r.TryDecodeAsNil() {
				x.OSBMetadata = nil
			} else {
				yyv358 := &x.OSBMetadata
				yym359 := z.DecBinary()
				_ = yym359
				if false {
				} else {
					z.DecFallback(yyv358, true)
				}
			}
		case "OSBFree":
			if r.TryDecodeAsNil() {
				x.OSBFree = false
			} else {
				x.OSBFree = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys355)
		} // end switch yys355
	} // end for yyj355
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *ServicePlan) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj361 int
	var yyb361 bool
	var yyhl361 bool = l >= 0
	yyj361++
	if yyhl361 {
		yyb361 = yyj361 > l
	} else {
		yyb361 = r.CheckBreak()
	}
	if yyb361 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj361++
	if yyhl361 {
		yyb361 = yyj361 > l
	} else {
		yyb361 = r.CheckBreak()
	}
	if yyb361 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBGUID = ""
	} else {
		x.OSBGUID = string(r.DecodeString())
	}
	yyj361++
	if yyhl361 {
		yyb361 = yyj361 > l
	} else {
		yyb361 = r.CheckBreak()
	}
	if yyb361 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBMetadata = nil
	} else {
		yyv364 := &x.OSBMetadata
		yym365 := z.DecBinary()
		_ = yym365
		if false {
		} else {
			z.DecFallback(yyv364, true)
		}
	}
	yyj361++
	if yyhl361 {
		yyb361 = yyj361 > l
	} else {
		yyb361 = r.CheckBreak()
	}
	if yyb361 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBFree = false
	} else {
		x.OSBFree = bool(r.DecodeBool())
	}
	for {
		yyj361++
		if yyhl361 {
			yyb361 = yyj361 > l
		} else {
			yyb361 = r.CheckBreak()
		}
		if yyb361 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj361-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *InstanceList) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym367 := z.EncBinary()
		_ = yym367
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep368 := !z.EncBinary()
			yy2arr368 := z.EncBasicHandle().StructToArray
			var yyq368 [5]bool
			_, _, _ = yysep368, yyq368, yy2arr368
			const yyr368 bool = false
			yyq368[0] = x.Kind != ""
			yyq368[1] = x.APIVersion != ""
			yyq368[2] = x.SelfLink != ""
			yyq368[3] = x.ResourceVersion != ""
			var yynn368 int
			if yyr368 || yy2arr368 {
				r.EncodeArrayStart(5)
			} else {
				yynn368 = 1
				for _, b := range yyq368 {
					if b {
						yynn368++
					}
				}
				r.EncodeMapStart(yynn368)
				yynn368 = 0
			}
			if yyr368 || yy2arr368 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq368[0] {
					yym370 := z.EncBinary()
					_ = yym370
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq368[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym371 := z.EncBinary()
					_ = yym371
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr368 || yy2arr368 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq368[1] {
					yym373 := z.EncBinary()
					_ = yym373
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq368[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym374 := z.EncBinary()
					_ = yym374
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr368 || yy2arr368 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq368[2] {
					yym376 := z.EncBinary()
					_ = yym376
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq368[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym377 := z.EncBinary()
					_ = yym377
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr368 || yy2arr368 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq368[3] {
					yym379 := z.EncBinary()
					_ = yym379
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq368[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym380 := z.EncBinary()
					_ = yym380
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr368 || yy2arr368 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Items == nil {
					r.EncodeNil()
				} else {
					yym382 := z.EncBinary()
					_ = yym382
					if false {
					} else {
						h.encSliceInstance(([]Instance)(x.Items), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Items"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Items == nil {
					r.EncodeNil()
				} else {
					yym383 := z.EncBinary()
					_ = yym383
					if false {
					} else {
						h.encSliceInstance(([]Instance)(x.Items), e)
					}
				}
			}
			if yyr368 || yy2arr368 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *InstanceList) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym384 := z.DecBinary()
	_ = yym384
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct385 := r.ContainerType()
		if yyct385 == codecSelferValueTypeMap1234 {
			yyl385 := r.ReadMapStart()
			if yyl385 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl385, d)
			}
		} else if yyct385 == codecSelferValueTypeArray1234 {
			yyl385 := r.ReadArrayStart()
			if yyl385 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl385, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *InstanceList) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys386Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys386Slc
	var yyhl386 bool = l >= 0
	for yyj386 := 0; ; yyj386++ {
		if yyhl386 {
			if yyj386 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys386Slc = r.DecodeBytes(yys386Slc, true, true)
		yys386 := string(yys386Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys386 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "Items":
			if r.TryDecodeAsNil() {
				x.Items = nil
			} else {
				yyv391 := &x.Items
				yym392 := z.DecBinary()
				_ = yym392
				if false {
				} else {
					h.decSliceInstance((*[]Instance)(yyv391), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys386)
		} // end switch yys386
	} // end for yyj386
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *InstanceList) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj393 int
	var yyb393 bool
	var yyhl393 bool = l >= 0
	yyj393++
	if yyhl393 {
		yyb393 = yyj393 > l
	} else {
		yyb393 = r.CheckBreak()
	}
	if yyb393 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj393++
	if yyhl393 {
		yyb393 = yyj393 > l
	} else {
		yyb393 = r.CheckBreak()
	}
	if yyb393 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj393++
	if yyhl393 {
		yyb393 = yyj393 > l
	} else {
		yyb393 = r.CheckBreak()
	}
	if yyb393 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj393++
	if yyhl393 {
		yyb393 = yyj393 > l
	} else {
		yyb393 = r.CheckBreak()
	}
	if yyb393 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj393++
	if yyhl393 {
		yyb393 = yyj393 > l
	} else {
		yyb393 = r.CheckBreak()
	}
	if yyb393 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Items = nil
	} else {
		yyv398 := &x.Items
		yym399 := z.DecBinary()
		_ = yym399
		if false {
		} else {
			h.decSliceInstance((*[]Instance)(yyv398), d)
		}
	}
	for {
		yyj393++
		if yyhl393 {
			yyb393 = yyj393 > l
		} else {
			yyb393 = r.CheckBreak()
		}
		if yyb393 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj393-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *Instance) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym400 := z.EncBinary()
		_ = yym400
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep401 := !z.EncBinary()
			yy2arr401 := z.EncBasicHandle().StructToArray
			var yyq401 [19]bool
			_, _, _ = yysep401, yyq401, yy2arr401
			const yyr401 bool = false
			yyq401[0] = x.Kind != ""
			yyq401[1] = x.APIVersion != ""
			yyq401[2] = x.Name != ""
			yyq401[3] = x.GenerateName != ""
			yyq401[4] = x.Namespace != ""
			yyq401[5] = x.SelfLink != ""
			yyq401[6] = x.UID != ""
			yyq401[7] = x.ResourceVersion != ""
			yyq401[8] = x.Generation != 0
			yyq401[9] = true
			yyq401[10] = x.ObjectMeta.DeletionTimestamp != nil && x.DeletionTimestamp != nil
			yyq401[11] = x.ObjectMeta.DeletionGracePeriodSeconds != nil && x.DeletionGracePeriodSeconds != nil
			yyq401[12] = len(x.Labels) != 0
			yyq401[13] = len(x.Annotations) != 0
			yyq401[14] = len(x.OwnerReferences) != 0
			yyq401[15] = len(x.Finalizers) != 0
			yyq401[16] = x.ClusterName != ""
			var yynn401 int
			if yyr401 || yy2arr401 {
				r.EncodeArrayStart(19)
			} else {
				yynn401 = 2
				for _, b := range yyq401 {
					if b {
						yynn401++
					}
				}
				r.EncodeMapStart(yynn401)
				yynn401 = 0
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[0] {
					yym403 := z.EncBinary()
					_ = yym403
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym404 := z.EncBinary()
					_ = yym404
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[1] {
					yym406 := z.EncBinary()
					_ = yym406
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym407 := z.EncBinary()
					_ = yym407
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[2] {
					yym409 := z.EncBinary()
					_ = yym409
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("name"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym410 := z.EncBinary()
					_ = yym410
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[3] {
					yym412 := z.EncBinary()
					_ = yym412
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generateName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym413 := z.EncBinary()
					_ = yym413
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[4] {
					yym415 := z.EncBinary()
					_ = yym415
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("namespace"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym416 := z.EncBinary()
					_ = yym416
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[5] {
					yym418 := z.EncBinary()
					_ = yym418
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym419 := z.EncBinary()
					_ = yym419
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[6] {
					yym421 := z.EncBinary()
					_ = yym421
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("uid"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym422 := z.EncBinary()
					_ = yym422
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[7] {
					yym424 := z.EncBinary()
					_ = yym424
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym425 := z.EncBinary()
					_ = yym425
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[8] {
					yym427 := z.EncBinary()
					_ = yym427
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				} else {
					r.EncodeInt(0)
				}
			} else {
				if yyq401[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generation"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym428 := z.EncBinary()
					_ = yym428
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[9] {
					yy430 := &x.CreationTimestamp
					yym431 := z.EncBinary()
					_ = yym431
					if false {
					} else if z.HasExtensions() && z.EncExt(yy430) {
					} else if yym431 {
						z.EncBinaryMarshal(yy430)
					} else if !yym431 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy430)
					} else {
						z.EncFallback(yy430)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq401[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("creationTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yy432 := &x.CreationTimestamp
					yym433 := z.EncBinary()
					_ = yym433
					if false {
					} else if z.HasExtensions() && z.EncExt(yy432) {
					} else if yym433 {
						z.EncBinaryMarshal(yy432)
					} else if !yym433 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy432)
					} else {
						z.EncFallback(yy432)
					}
				}
			}
			var yyn434 bool
			if x.ObjectMeta.DeletionTimestamp == nil {
				yyn434 = true
				goto LABEL434
			}
		LABEL434:
			if yyr401 || yy2arr401 {
				if yyn434 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq401[10] {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym435 := z.EncBinary()
							_ = yym435
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym435 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym435 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq401[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn434 {
						r.EncodeNil()
					} else {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym436 := z.EncBinary()
							_ = yym436
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym436 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym436 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					}
				}
			}
			var yyn437 bool
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				yyn437 = true
				goto LABEL437
			}
		LABEL437:
			if yyr401 || yy2arr401 {
				if yyn437 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq401[11] {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy438 := *x.DeletionGracePeriodSeconds
							yym439 := z.EncBinary()
							_ = yym439
							if false {
							} else {
								r.EncodeInt(int64(yy438))
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq401[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionGracePeriodSeconds"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn437 {
						r.EncodeNil()
					} else {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy440 := *x.DeletionGracePeriodSeconds
							yym441 := z.EncBinary()
							_ = yym441
							if false {
							} else {
								r.EncodeInt(int64(yy440))
							}
						}
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[12] {
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym443 := z.EncBinary()
						_ = yym443
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq401[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("labels"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym444 := z.EncBinary()
						_ = yym444
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[13] {
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym446 := z.EncBinary()
						_ = yym446
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq401[13] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("annotations"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym447 := z.EncBinary()
						_ = yym447
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[14] {
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym449 := z.EncBinary()
						_ = yym449
						if false {
						} else {
							h.encSlicev1_OwnerReference(([]pkg2_v1.OwnerReference)(x.OwnerReferences), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq401[14] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("ownerReferences"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym450 := z.EncBinary()
						_ = yym450
						if false {
						} else {
							h.encSlicev1_OwnerReference(([]pkg2_v1.OwnerReference)(x.OwnerReferences), e)
						}
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[15] {
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym452 := z.EncBinary()
						_ = yym452
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq401[15] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("finalizers"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym453 := z.EncBinary()
						_ = yym453
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq401[16] {
					yym455 := z.EncBinary()
					_ = yym455
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ClusterName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq401[16] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("clusterName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym456 := z.EncBinary()
					_ = yym456
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ClusterName))
					}
				}
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy458 := &x.Spec
				yy458.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Spec"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy459 := &x.Spec
				yy459.CodecEncodeSelf(e)
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy461 := &x.Status
				yy461.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy462 := &x.Status
				yy462.CodecEncodeSelf(e)
			}
			if yyr401 || yy2arr401 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *Instance) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym463 := z.DecBinary()
	_ = yym463
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct464 := r.ContainerType()
		if yyct464 == codecSelferValueTypeMap1234 {
			yyl464 := r.ReadMapStart()
			if yyl464 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl464, d)
			}
		} else if yyct464 == codecSelferValueTypeArray1234 {
			yyl464 := r.ReadArrayStart()
			if yyl464 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl464, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *Instance) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys465Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys465Slc
	var yyhl465 bool = l >= 0
	for yyj465 := 0; ; yyj465++ {
		if yyhl465 {
			if yyj465 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys465Slc = r.DecodeBytes(yys465Slc, true, true)
		yys465 := string(yys465Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys465 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "generateName":
			if r.TryDecodeAsNil() {
				x.GenerateName = ""
			} else {
				x.GenerateName = string(r.DecodeString())
			}
		case "namespace":
			if r.TryDecodeAsNil() {
				x.Namespace = ""
			} else {
				x.Namespace = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "uid":
			if r.TryDecodeAsNil() {
				x.UID = ""
			} else {
				x.UID = pkg3_types.UID(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "generation":
			if r.TryDecodeAsNil() {
				x.Generation = 0
			} else {
				x.Generation = int64(r.DecodeInt(64))
			}
		case "creationTimestamp":
			if r.TryDecodeAsNil() {
				x.CreationTimestamp = pkg1_v1.Time{}
			} else {
				yyv475 := &x.CreationTimestamp
				yym476 := z.DecBinary()
				_ = yym476
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv475) {
				} else if yym476 {
					z.DecBinaryUnmarshal(yyv475)
				} else if !yym476 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv475)
				} else {
					z.DecFallback(yyv475, false)
				}
			}
		case "deletionTimestamp":
			if x.ObjectMeta.DeletionTimestamp == nil {
				x.ObjectMeta.DeletionTimestamp = new(pkg1_v1.Time)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionTimestamp != nil {
					x.DeletionTimestamp = nil
				}
			} else {
				if x.DeletionTimestamp == nil {
					x.DeletionTimestamp = new(pkg1_v1.Time)
				}
				yym478 := z.DecBinary()
				_ = yym478
				if false {
				} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
				} else if yym478 {
					z.DecBinaryUnmarshal(x.DeletionTimestamp)
				} else if !yym478 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.DeletionTimestamp)
				} else {
					z.DecFallback(x.DeletionTimestamp, false)
				}
			}
		case "deletionGracePeriodSeconds":
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionGracePeriodSeconds != nil {
					x.DeletionGracePeriodSeconds = nil
				}
			} else {
				if x.DeletionGracePeriodSeconds == nil {
					x.DeletionGracePeriodSeconds = new(int64)
				}
				yym480 := z.DecBinary()
				_ = yym480
				if false {
				} else {
					*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
				}
			}
		case "labels":
			if r.TryDecodeAsNil() {
				x.Labels = nil
			} else {
				yyv481 := &x.Labels
				yym482 := z.DecBinary()
				_ = yym482
				if false {
				} else {
					z.F.DecMapStringStringX(yyv481, false, d)
				}
			}
		case "annotations":
			if r.TryDecodeAsNil() {
				x.Annotations = nil
			} else {
				yyv483 := &x.Annotations
				yym484 := z.DecBinary()
				_ = yym484
				if false {
				} else {
					z.F.DecMapStringStringX(yyv483, false, d)
				}
			}
		case "ownerReferences":
			if r.TryDecodeAsNil() {
				x.OwnerReferences = nil
			} else {
				yyv485 := &x.OwnerReferences
				yym486 := z.DecBinary()
				_ = yym486
				if false {
				} else {
					h.decSlicev1_OwnerReference((*[]pkg2_v1.OwnerReference)(yyv485), d)
				}
			}
		case "finalizers":
			if r.TryDecodeAsNil() {
				x.Finalizers = nil
			} else {
				yyv487 := &x.Finalizers
				yym488 := z.DecBinary()
				_ = yym488
				if false {
				} else {
					z.F.DecSliceStringX(yyv487, false, d)
				}
			}
		case "clusterName":
			if r.TryDecodeAsNil() {
				x.ClusterName = ""
			} else {
				x.ClusterName = string(r.DecodeString())
			}
		case "Spec":
			if r.TryDecodeAsNil() {
				x.Spec = InstanceSpec{}
			} else {
				yyv490 := &x.Spec
				yyv490.CodecDecodeSelf(d)
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = InstanceStatus{}
			} else {
				yyv491 := &x.Status
				yyv491.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys465)
		} // end switch yys465
	} // end for yyj465
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *Instance) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj492 int
	var yyb492 bool
	var yyhl492 bool = l >= 0
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.GenerateName = ""
	} else {
		x.GenerateName = string(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Namespace = ""
	} else {
		x.Namespace = string(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.UID = ""
	} else {
		x.UID = pkg3_types.UID(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Generation = 0
	} else {
		x.Generation = int64(r.DecodeInt(64))
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.CreationTimestamp = pkg1_v1.Time{}
	} else {
		yyv502 := &x.CreationTimestamp
		yym503 := z.DecBinary()
		_ = yym503
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv502) {
		} else if yym503 {
			z.DecBinaryUnmarshal(yyv502)
		} else if !yym503 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv502)
		} else {
			z.DecFallback(yyv502, false)
		}
	}
	if x.ObjectMeta.DeletionTimestamp == nil {
		x.ObjectMeta.DeletionTimestamp = new(pkg1_v1.Time)
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionTimestamp != nil {
			x.DeletionTimestamp = nil
		}
	} else {
		if x.DeletionTimestamp == nil {
			x.DeletionTimestamp = new(pkg1_v1.Time)
		}
		yym505 := z.DecBinary()
		_ = yym505
		if false {
		} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
		} else if yym505 {
			z.DecBinaryUnmarshal(x.DeletionTimestamp)
		} else if !yym505 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.DeletionTimestamp)
		} else {
			z.DecFallback(x.DeletionTimestamp, false)
		}
	}
	if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
		x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionGracePeriodSeconds != nil {
			x.DeletionGracePeriodSeconds = nil
		}
	} else {
		if x.DeletionGracePeriodSeconds == nil {
			x.DeletionGracePeriodSeconds = new(int64)
		}
		yym507 := z.DecBinary()
		_ = yym507
		if false {
		} else {
			*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
		}
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Labels = nil
	} else {
		yyv508 := &x.Labels
		yym509 := z.DecBinary()
		_ = yym509
		if false {
		} else {
			z.F.DecMapStringStringX(yyv508, false, d)
		}
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Annotations = nil
	} else {
		yyv510 := &x.Annotations
		yym511 := z.DecBinary()
		_ = yym511
		if false {
		} else {
			z.F.DecMapStringStringX(yyv510, false, d)
		}
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OwnerReferences = nil
	} else {
		yyv512 := &x.OwnerReferences
		yym513 := z.DecBinary()
		_ = yym513
		if false {
		} else {
			h.decSlicev1_OwnerReference((*[]pkg2_v1.OwnerReference)(yyv512), d)
		}
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Finalizers = nil
	} else {
		yyv514 := &x.Finalizers
		yym515 := z.DecBinary()
		_ = yym515
		if false {
		} else {
			z.F.DecSliceStringX(yyv514, false, d)
		}
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ClusterName = ""
	} else {
		x.ClusterName = string(r.DecodeString())
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Spec = InstanceSpec{}
	} else {
		yyv517 := &x.Spec
		yyv517.CodecDecodeSelf(d)
	}
	yyj492++
	if yyhl492 {
		yyb492 = yyj492 > l
	} else {
		yyb492 = r.CheckBreak()
	}
	if yyb492 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = InstanceStatus{}
	} else {
		yyv518 := &x.Status
		yyv518.CodecDecodeSelf(d)
	}
	for {
		yyj492++
		if yyhl492 {
			yyb492 = yyj492 > l
		} else {
			yyb492 = r.CheckBreak()
		}
		if yyb492 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj492-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *InstanceSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym519 := z.EncBinary()
		_ = yym519
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep520 := !z.EncBinary()
			yy2arr520 := z.EncBasicHandle().StructToArray
			var yyq520 [12]bool
			_, _, _ = yysep520, yyq520, yy2arr520
			const yyr520 bool = false
			var yynn520 int
			if yyr520 || yy2arr520 {
				r.EncodeArrayStart(12)
			} else {
				yynn520 = 12
				for _, b := range yyq520 {
					if b {
						yynn520++
					}
				}
				r.EncodeMapStart(yynn520)
				yynn520 = 0
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym522 := z.EncBinary()
				_ = yym522
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.ServiceClassName))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("ServiceClassName"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym523 := z.EncBinary()
				_ = yym523
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.ServiceClassName))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym525 := z.EncBinary()
				_ = yym525
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.PlanName))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("PlanName"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym526 := z.EncBinary()
				_ = yym526
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.PlanName))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Parameters == nil {
					r.EncodeNil()
				} else {
					yym528 := z.EncBinary()
					_ = yym528
					if false {
					} else {
						z.F.EncMapStringIntfV(x.Parameters, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Parameters"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Parameters == nil {
					r.EncodeNil()
				} else {
					yym529 := z.EncBinary()
					_ = yym529
					if false {
					} else {
						z.F.EncMapStringIntfV(x.Parameters, false, e)
					}
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym531 := z.EncBinary()
				_ = yym531
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBGUID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym532 := z.EncBinary()
				_ = yym532
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym534 := z.EncBinary()
				_ = yym534
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBCredentials))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBCredentials"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym535 := z.EncBinary()
				_ = yym535
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBCredentials))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym537 := z.EncBinary()
				_ = yym537
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBDashboardURL))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBDashboardURL"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym538 := z.EncBinary()
				_ = yym538
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBDashboardURL))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym540 := z.EncBinary()
				_ = yym540
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBInternalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBInternalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym541 := z.EncBinary()
				_ = yym541
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBInternalID))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym543 := z.EncBinary()
				_ = yym543
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBServiceID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBServiceID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym544 := z.EncBinary()
				_ = yym544
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBServiceID))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym546 := z.EncBinary()
				_ = yym546
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBPlanID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBPlanID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym547 := z.EncBinary()
				_ = yym547
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBPlanID))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym549 := z.EncBinary()
				_ = yym549
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBType))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBType"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym550 := z.EncBinary()
				_ = yym550
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBType))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym552 := z.EncBinary()
				_ = yym552
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBSpaceGUID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBSpaceGUID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym553 := z.EncBinary()
				_ = yym553
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBSpaceGUID))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym555 := z.EncBinary()
				_ = yym555
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBLastOperation))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBLastOperation"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym556 := z.EncBinary()
				_ = yym556
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBLastOperation))
				}
			}
			if yyr520 || yy2arr520 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *InstanceSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym557 := z.DecBinary()
	_ = yym557
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct558 := r.ContainerType()
		if yyct558 == codecSelferValueTypeMap1234 {
			yyl558 := r.ReadMapStart()
			if yyl558 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl558, d)
			}
		} else if yyct558 == codecSelferValueTypeArray1234 {
			yyl558 := r.ReadArrayStart()
			if yyl558 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl558, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *InstanceSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys559Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys559Slc
	var yyhl559 bool = l >= 0
	for yyj559 := 0; ; yyj559++ {
		if yyhl559 {
			if yyj559 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys559Slc = r.DecodeBytes(yys559Slc, true, true)
		yys559 := string(yys559Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys559 {
		case "ServiceClassName":
			if r.TryDecodeAsNil() {
				x.ServiceClassName = ""
			} else {
				x.ServiceClassName = string(r.DecodeString())
			}
		case "PlanName":
			if r.TryDecodeAsNil() {
				x.PlanName = ""
			} else {
				x.PlanName = string(r.DecodeString())
			}
		case "Parameters":
			if r.TryDecodeAsNil() {
				x.Parameters = nil
			} else {
				yyv562 := &x.Parameters
				yym563 := z.DecBinary()
				_ = yym563
				if false {
				} else {
					z.F.DecMapStringIntfX(yyv562, false, d)
				}
			}
		case "OSBGUID":
			if r.TryDecodeAsNil() {
				x.OSBGUID = ""
			} else {
				x.OSBGUID = string(r.DecodeString())
			}
		case "OSBCredentials":
			if r.TryDecodeAsNil() {
				x.OSBCredentials = ""
			} else {
				x.OSBCredentials = string(r.DecodeString())
			}
		case "OSBDashboardURL":
			if r.TryDecodeAsNil() {
				x.OSBDashboardURL = ""
			} else {
				x.OSBDashboardURL = string(r.DecodeString())
			}
		case "OSBInternalID":
			if r.TryDecodeAsNil() {
				x.OSBInternalID = ""
			} else {
				x.OSBInternalID = string(r.DecodeString())
			}
		case "OSBServiceID":
			if r.TryDecodeAsNil() {
				x.OSBServiceID = ""
			} else {
				x.OSBServiceID = string(r.DecodeString())
			}
		case "OSBPlanID":
			if r.TryDecodeAsNil() {
				x.OSBPlanID = ""
			} else {
				x.OSBPlanID = string(r.DecodeString())
			}
		case "OSBType":
			if r.TryDecodeAsNil() {
				x.OSBType = ""
			} else {
				x.OSBType = string(r.DecodeString())
			}
		case "OSBSpaceGUID":
			if r.TryDecodeAsNil() {
				x.OSBSpaceGUID = ""
			} else {
				x.OSBSpaceGUID = string(r.DecodeString())
			}
		case "OSBLastOperation":
			if r.TryDecodeAsNil() {
				x.OSBLastOperation = ""
			} else {
				x.OSBLastOperation = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys559)
		} // end switch yys559
	} // end for yyj559
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *InstanceSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj573 int
	var yyb573 bool
	var yyhl573 bool = l >= 0
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ServiceClassName = ""
	} else {
		x.ServiceClassName = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.PlanName = ""
	} else {
		x.PlanName = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Parameters = nil
	} else {
		yyv576 := &x.Parameters
		yym577 := z.DecBinary()
		_ = yym577
		if false {
		} else {
			z.F.DecMapStringIntfX(yyv576, false, d)
		}
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBGUID = ""
	} else {
		x.OSBGUID = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBCredentials = ""
	} else {
		x.OSBCredentials = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBDashboardURL = ""
	} else {
		x.OSBDashboardURL = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBInternalID = ""
	} else {
		x.OSBInternalID = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBServiceID = ""
	} else {
		x.OSBServiceID = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBPlanID = ""
	} else {
		x.OSBPlanID = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBType = ""
	} else {
		x.OSBType = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBSpaceGUID = ""
	} else {
		x.OSBSpaceGUID = string(r.DecodeString())
	}
	yyj573++
	if yyhl573 {
		yyb573 = yyj573 > l
	} else {
		yyb573 = r.CheckBreak()
	}
	if yyb573 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBLastOperation = ""
	} else {
		x.OSBLastOperation = string(r.DecodeString())
	}
	for {
		yyj573++
		if yyhl573 {
			yyb573 = yyj573 > l
		} else {
			yyb573 = r.CheckBreak()
		}
		if yyb573 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj573-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *InstanceStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym587 := z.EncBinary()
		_ = yym587
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep588 := !z.EncBinary()
			yy2arr588 := z.EncBasicHandle().StructToArray
			var yyq588 [1]bool
			_, _, _ = yysep588, yyq588, yy2arr588
			const yyr588 bool = false
			var yynn588 int
			if yyr588 || yy2arr588 {
				r.EncodeArrayStart(1)
			} else {
				yynn588 = 1
				for _, b := range yyq588 {
					if b {
						yynn588++
					}
				}
				r.EncodeMapStart(yynn588)
				yynn588 = 0
			}
			if yyr588 || yy2arr588 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Conditions == nil {
					r.EncodeNil()
				} else {
					yym590 := z.EncBinary()
					_ = yym590
					if false {
					} else {
						h.encSliceInstanceCondition(([]InstanceCondition)(x.Conditions), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Conditions"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Conditions == nil {
					r.EncodeNil()
				} else {
					yym591 := z.EncBinary()
					_ = yym591
					if false {
					} else {
						h.encSliceInstanceCondition(([]InstanceCondition)(x.Conditions), e)
					}
				}
			}
			if yyr588 || yy2arr588 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *InstanceStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym592 := z.DecBinary()
	_ = yym592
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct593 := r.ContainerType()
		if yyct593 == codecSelferValueTypeMap1234 {
			yyl593 := r.ReadMapStart()
			if yyl593 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl593, d)
			}
		} else if yyct593 == codecSelferValueTypeArray1234 {
			yyl593 := r.ReadArrayStart()
			if yyl593 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl593, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *InstanceStatus) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys594Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys594Slc
	var yyhl594 bool = l >= 0
	for yyj594 := 0; ; yyj594++ {
		if yyhl594 {
			if yyj594 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys594Slc = r.DecodeBytes(yys594Slc, true, true)
		yys594 := string(yys594Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys594 {
		case "Conditions":
			if r.TryDecodeAsNil() {
				x.Conditions = nil
			} else {
				yyv595 := &x.Conditions
				yym596 := z.DecBinary()
				_ = yym596
				if false {
				} else {
					h.decSliceInstanceCondition((*[]InstanceCondition)(yyv595), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys594)
		} // end switch yys594
	} // end for yyj594
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *InstanceStatus) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj597 int
	var yyb597 bool
	var yyhl597 bool = l >= 0
	yyj597++
	if yyhl597 {
		yyb597 = yyj597 > l
	} else {
		yyb597 = r.CheckBreak()
	}
	if yyb597 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Conditions = nil
	} else {
		yyv598 := &x.Conditions
		yym599 := z.DecBinary()
		_ = yym599
		if false {
		} else {
			h.decSliceInstanceCondition((*[]InstanceCondition)(yyv598), d)
		}
	}
	for {
		yyj597++
		if yyhl597 {
			yyb597 = yyj597 > l
		} else {
			yyb597 = r.CheckBreak()
		}
		if yyb597 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj597-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *InstanceCondition) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym600 := z.EncBinary()
		_ = yym600
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep601 := !z.EncBinary()
			yy2arr601 := z.EncBasicHandle().StructToArray
			var yyq601 [4]bool
			_, _, _ = yysep601, yyq601, yy2arr601
			const yyr601 bool = false
			var yynn601 int
			if yyr601 || yy2arr601 {
				r.EncodeArrayStart(4)
			} else {
				yynn601 = 4
				for _, b := range yyq601 {
					if b {
						yynn601++
					}
				}
				r.EncodeMapStart(yynn601)
				yynn601 = 0
			}
			if yyr601 || yy2arr601 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				x.Type.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Type"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				x.Type.CodecEncodeSelf(e)
			}
			if yyr601 || yy2arr601 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				x.Status.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				x.Status.CodecEncodeSelf(e)
			}
			if yyr601 || yy2arr601 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym605 := z.EncBinary()
				_ = yym605
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Reason))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Reason"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym606 := z.EncBinary()
				_ = yym606
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Reason))
				}
			}
			if yyr601 || yy2arr601 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym608 := z.EncBinary()
				_ = yym608
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Message))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Message"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym609 := z.EncBinary()
				_ = yym609
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Message))
				}
			}
			if yyr601 || yy2arr601 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *InstanceCondition) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym610 := z.DecBinary()
	_ = yym610
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct611 := r.ContainerType()
		if yyct611 == codecSelferValueTypeMap1234 {
			yyl611 := r.ReadMapStart()
			if yyl611 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl611, d)
			}
		} else if yyct611 == codecSelferValueTypeArray1234 {
			yyl611 := r.ReadArrayStart()
			if yyl611 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl611, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *InstanceCondition) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys612Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys612Slc
	var yyhl612 bool = l >= 0
	for yyj612 := 0; ; yyj612++ {
		if yyhl612 {
			if yyj612 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys612Slc = r.DecodeBytes(yys612Slc, true, true)
		yys612 := string(yys612Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys612 {
		case "Type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				x.Type = InstanceConditionType(r.DecodeString())
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = ConditionStatus(r.DecodeString())
			}
		case "Reason":
			if r.TryDecodeAsNil() {
				x.Reason = ""
			} else {
				x.Reason = string(r.DecodeString())
			}
		case "Message":
			if r.TryDecodeAsNil() {
				x.Message = ""
			} else {
				x.Message = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys612)
		} // end switch yys612
	} // end for yyj612
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *InstanceCondition) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj617 int
	var yyb617 bool
	var yyhl617 bool = l >= 0
	yyj617++
	if yyhl617 {
		yyb617 = yyj617 > l
	} else {
		yyb617 = r.CheckBreak()
	}
	if yyb617 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		x.Type = InstanceConditionType(r.DecodeString())
	}
	yyj617++
	if yyhl617 {
		yyb617 = yyj617 > l
	} else {
		yyb617 = r.CheckBreak()
	}
	if yyb617 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = ConditionStatus(r.DecodeString())
	}
	yyj617++
	if yyhl617 {
		yyb617 = yyj617 > l
	} else {
		yyb617 = r.CheckBreak()
	}
	if yyb617 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Reason = ""
	} else {
		x.Reason = string(r.DecodeString())
	}
	yyj617++
	if yyhl617 {
		yyb617 = yyj617 > l
	} else {
		yyb617 = r.CheckBreak()
	}
	if yyb617 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Message = ""
	} else {
		x.Message = string(r.DecodeString())
	}
	for {
		yyj617++
		if yyhl617 {
			yyb617 = yyj617 > l
		} else {
			yyb617 = r.CheckBreak()
		}
		if yyb617 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj617-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x InstanceConditionType) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	yym622 := z.EncBinary()
	_ = yym622
	if false {
	} else if z.HasExtensions() && z.EncExt(x) {
	} else {
		r.EncodeString(codecSelferC_UTF81234, string(x))
	}
}

func (x *InstanceConditionType) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym623 := z.DecBinary()
	_ = yym623
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		*((*string)(x)) = r.DecodeString()
	}
}

func (x *BindingList) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym624 := z.EncBinary()
		_ = yym624
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep625 := !z.EncBinary()
			yy2arr625 := z.EncBasicHandle().StructToArray
			var yyq625 [5]bool
			_, _, _ = yysep625, yyq625, yy2arr625
			const yyr625 bool = false
			yyq625[0] = x.Kind != ""
			yyq625[1] = x.APIVersion != ""
			yyq625[2] = x.SelfLink != ""
			yyq625[3] = x.ResourceVersion != ""
			var yynn625 int
			if yyr625 || yy2arr625 {
				r.EncodeArrayStart(5)
			} else {
				yynn625 = 1
				for _, b := range yyq625 {
					if b {
						yynn625++
					}
				}
				r.EncodeMapStart(yynn625)
				yynn625 = 0
			}
			if yyr625 || yy2arr625 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq625[0] {
					yym627 := z.EncBinary()
					_ = yym627
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq625[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym628 := z.EncBinary()
					_ = yym628
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr625 || yy2arr625 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq625[1] {
					yym630 := z.EncBinary()
					_ = yym630
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq625[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym631 := z.EncBinary()
					_ = yym631
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr625 || yy2arr625 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq625[2] {
					yym633 := z.EncBinary()
					_ = yym633
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq625[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym634 := z.EncBinary()
					_ = yym634
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr625 || yy2arr625 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq625[3] {
					yym636 := z.EncBinary()
					_ = yym636
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq625[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym637 := z.EncBinary()
					_ = yym637
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr625 || yy2arr625 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Items == nil {
					r.EncodeNil()
				} else {
					yym639 := z.EncBinary()
					_ = yym639
					if false {
					} else {
						h.encSliceBinding(([]Binding)(x.Items), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Items"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Items == nil {
					r.EncodeNil()
				} else {
					yym640 := z.EncBinary()
					_ = yym640
					if false {
					} else {
						h.encSliceBinding(([]Binding)(x.Items), e)
					}
				}
			}
			if yyr625 || yy2arr625 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *BindingList) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym641 := z.DecBinary()
	_ = yym641
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct642 := r.ContainerType()
		if yyct642 == codecSelferValueTypeMap1234 {
			yyl642 := r.ReadMapStart()
			if yyl642 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl642, d)
			}
		} else if yyct642 == codecSelferValueTypeArray1234 {
			yyl642 := r.ReadArrayStart()
			if yyl642 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl642, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *BindingList) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys643Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys643Slc
	var yyhl643 bool = l >= 0
	for yyj643 := 0; ; yyj643++ {
		if yyhl643 {
			if yyj643 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys643Slc = r.DecodeBytes(yys643Slc, true, true)
		yys643 := string(yys643Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys643 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "Items":
			if r.TryDecodeAsNil() {
				x.Items = nil
			} else {
				yyv648 := &x.Items
				yym649 := z.DecBinary()
				_ = yym649
				if false {
				} else {
					h.decSliceBinding((*[]Binding)(yyv648), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys643)
		} // end switch yys643
	} // end for yyj643
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *BindingList) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj650 int
	var yyb650 bool
	var yyhl650 bool = l >= 0
	yyj650++
	if yyhl650 {
		yyb650 = yyj650 > l
	} else {
		yyb650 = r.CheckBreak()
	}
	if yyb650 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj650++
	if yyhl650 {
		yyb650 = yyj650 > l
	} else {
		yyb650 = r.CheckBreak()
	}
	if yyb650 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj650++
	if yyhl650 {
		yyb650 = yyj650 > l
	} else {
		yyb650 = r.CheckBreak()
	}
	if yyb650 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj650++
	if yyhl650 {
		yyb650 = yyj650 > l
	} else {
		yyb650 = r.CheckBreak()
	}
	if yyb650 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj650++
	if yyhl650 {
		yyb650 = yyj650 > l
	} else {
		yyb650 = r.CheckBreak()
	}
	if yyb650 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Items = nil
	} else {
		yyv655 := &x.Items
		yym656 := z.DecBinary()
		_ = yym656
		if false {
		} else {
			h.decSliceBinding((*[]Binding)(yyv655), d)
		}
	}
	for {
		yyj650++
		if yyhl650 {
			yyb650 = yyj650 > l
		} else {
			yyb650 = r.CheckBreak()
		}
		if yyb650 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj650-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *Binding) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym657 := z.EncBinary()
		_ = yym657
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep658 := !z.EncBinary()
			yy2arr658 := z.EncBasicHandle().StructToArray
			var yyq658 [19]bool
			_, _, _ = yysep658, yyq658, yy2arr658
			const yyr658 bool = false
			yyq658[0] = x.Kind != ""
			yyq658[1] = x.APIVersion != ""
			yyq658[2] = x.Name != ""
			yyq658[3] = x.GenerateName != ""
			yyq658[4] = x.Namespace != ""
			yyq658[5] = x.SelfLink != ""
			yyq658[6] = x.UID != ""
			yyq658[7] = x.ResourceVersion != ""
			yyq658[8] = x.Generation != 0
			yyq658[9] = true
			yyq658[10] = x.ObjectMeta.DeletionTimestamp != nil && x.DeletionTimestamp != nil
			yyq658[11] = x.ObjectMeta.DeletionGracePeriodSeconds != nil && x.DeletionGracePeriodSeconds != nil
			yyq658[12] = len(x.Labels) != 0
			yyq658[13] = len(x.Annotations) != 0
			yyq658[14] = len(x.OwnerReferences) != 0
			yyq658[15] = len(x.Finalizers) != 0
			yyq658[16] = x.ClusterName != ""
			var yynn658 int
			if yyr658 || yy2arr658 {
				r.EncodeArrayStart(19)
			} else {
				yynn658 = 2
				for _, b := range yyq658 {
					if b {
						yynn658++
					}
				}
				r.EncodeMapStart(yynn658)
				yynn658 = 0
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[0] {
					yym660 := z.EncBinary()
					_ = yym660
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[0] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("kind"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym661 := z.EncBinary()
					_ = yym661
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Kind))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[1] {
					yym663 := z.EncBinary()
					_ = yym663
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[1] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("apiVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym664 := z.EncBinary()
					_ = yym664
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.APIVersion))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[2] {
					yym666 := z.EncBinary()
					_ = yym666
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[2] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("name"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym667 := z.EncBinary()
					_ = yym667
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Name))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[3] {
					yym669 := z.EncBinary()
					_ = yym669
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[3] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generateName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym670 := z.EncBinary()
					_ = yym670
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.GenerateName))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[4] {
					yym672 := z.EncBinary()
					_ = yym672
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[4] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("namespace"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym673 := z.EncBinary()
					_ = yym673
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.Namespace))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[5] {
					yym675 := z.EncBinary()
					_ = yym675
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[5] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("selfLink"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym676 := z.EncBinary()
					_ = yym676
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.SelfLink))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[6] {
					yym678 := z.EncBinary()
					_ = yym678
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[6] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("uid"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym679 := z.EncBinary()
					_ = yym679
					if false {
					} else if z.HasExtensions() && z.EncExt(x.UID) {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.UID))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[7] {
					yym681 := z.EncBinary()
					_ = yym681
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[7] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("resourceVersion"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym682 := z.EncBinary()
					_ = yym682
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ResourceVersion))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[8] {
					yym684 := z.EncBinary()
					_ = yym684
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				} else {
					r.EncodeInt(0)
				}
			} else {
				if yyq658[8] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("generation"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym685 := z.EncBinary()
					_ = yym685
					if false {
					} else {
						r.EncodeInt(int64(x.Generation))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[9] {
					yy687 := &x.CreationTimestamp
					yym688 := z.EncBinary()
					_ = yym688
					if false {
					} else if z.HasExtensions() && z.EncExt(yy687) {
					} else if yym688 {
						z.EncBinaryMarshal(yy687)
					} else if !yym688 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy687)
					} else {
						z.EncFallback(yy687)
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq658[9] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("creationTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yy689 := &x.CreationTimestamp
					yym690 := z.EncBinary()
					_ = yym690
					if false {
					} else if z.HasExtensions() && z.EncExt(yy689) {
					} else if yym690 {
						z.EncBinaryMarshal(yy689)
					} else if !yym690 && z.IsJSONHandle() {
						z.EncJSONMarshal(yy689)
					} else {
						z.EncFallback(yy689)
					}
				}
			}
			var yyn691 bool
			if x.ObjectMeta.DeletionTimestamp == nil {
				yyn691 = true
				goto LABEL691
			}
		LABEL691:
			if yyr658 || yy2arr658 {
				if yyn691 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq658[10] {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym692 := z.EncBinary()
							_ = yym692
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym692 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym692 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq658[10] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionTimestamp"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn691 {
						r.EncodeNil()
					} else {
						if x.DeletionTimestamp == nil {
							r.EncodeNil()
						} else {
							yym693 := z.EncBinary()
							_ = yym693
							if false {
							} else if z.HasExtensions() && z.EncExt(x.DeletionTimestamp) {
							} else if yym693 {
								z.EncBinaryMarshal(x.DeletionTimestamp)
							} else if !yym693 && z.IsJSONHandle() {
								z.EncJSONMarshal(x.DeletionTimestamp)
							} else {
								z.EncFallback(x.DeletionTimestamp)
							}
						}
					}
				}
			}
			var yyn694 bool
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				yyn694 = true
				goto LABEL694
			}
		LABEL694:
			if yyr658 || yy2arr658 {
				if yyn694 {
					r.EncodeNil()
				} else {
					z.EncSendContainerState(codecSelfer_containerArrayElem1234)
					if yyq658[11] {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy695 := *x.DeletionGracePeriodSeconds
							yym696 := z.EncBinary()
							_ = yym696
							if false {
							} else {
								r.EncodeInt(int64(yy695))
							}
						}
					} else {
						r.EncodeNil()
					}
				}
			} else {
				if yyq658[11] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("deletionGracePeriodSeconds"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if yyn694 {
						r.EncodeNil()
					} else {
						if x.DeletionGracePeriodSeconds == nil {
							r.EncodeNil()
						} else {
							yy697 := *x.DeletionGracePeriodSeconds
							yym698 := z.EncBinary()
							_ = yym698
							if false {
							} else {
								r.EncodeInt(int64(yy697))
							}
						}
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[12] {
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym700 := z.EncBinary()
						_ = yym700
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq658[12] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("labels"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Labels == nil {
						r.EncodeNil()
					} else {
						yym701 := z.EncBinary()
						_ = yym701
						if false {
						} else {
							z.F.EncMapStringStringV(x.Labels, false, e)
						}
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[13] {
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym703 := z.EncBinary()
						_ = yym703
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq658[13] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("annotations"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Annotations == nil {
						r.EncodeNil()
					} else {
						yym704 := z.EncBinary()
						_ = yym704
						if false {
						} else {
							z.F.EncMapStringStringV(x.Annotations, false, e)
						}
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[14] {
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym706 := z.EncBinary()
						_ = yym706
						if false {
						} else {
							h.encSlicev1_OwnerReference(([]pkg2_v1.OwnerReference)(x.OwnerReferences), e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq658[14] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("ownerReferences"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.OwnerReferences == nil {
						r.EncodeNil()
					} else {
						yym707 := z.EncBinary()
						_ = yym707
						if false {
						} else {
							h.encSlicev1_OwnerReference(([]pkg2_v1.OwnerReference)(x.OwnerReferences), e)
						}
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[15] {
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym709 := z.EncBinary()
						_ = yym709
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				} else {
					r.EncodeNil()
				}
			} else {
				if yyq658[15] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("finalizers"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					if x.Finalizers == nil {
						r.EncodeNil()
					} else {
						yym710 := z.EncBinary()
						_ = yym710
						if false {
						} else {
							z.F.EncSliceStringV(x.Finalizers, false, e)
						}
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if yyq658[16] {
					yym712 := z.EncBinary()
					_ = yym712
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ClusterName))
					}
				} else {
					r.EncodeString(codecSelferC_UTF81234, "")
				}
			} else {
				if yyq658[16] {
					z.EncSendContainerState(codecSelfer_containerMapKey1234)
					r.EncodeString(codecSelferC_UTF81234, string("clusterName"))
					z.EncSendContainerState(codecSelfer_containerMapValue1234)
					yym713 := z.EncBinary()
					_ = yym713
					if false {
					} else {
						r.EncodeString(codecSelferC_UTF81234, string(x.ClusterName))
					}
				}
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy715 := &x.Spec
				yy715.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Spec"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy716 := &x.Spec
				yy716.CodecEncodeSelf(e)
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy718 := &x.Status
				yy718.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy719 := &x.Status
				yy719.CodecEncodeSelf(e)
			}
			if yyr658 || yy2arr658 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *Binding) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym720 := z.DecBinary()
	_ = yym720
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct721 := r.ContainerType()
		if yyct721 == codecSelferValueTypeMap1234 {
			yyl721 := r.ReadMapStart()
			if yyl721 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl721, d)
			}
		} else if yyct721 == codecSelferValueTypeArray1234 {
			yyl721 := r.ReadArrayStart()
			if yyl721 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl721, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *Binding) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys722Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys722Slc
	var yyhl722 bool = l >= 0
	for yyj722 := 0; ; yyj722++ {
		if yyhl722 {
			if yyj722 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys722Slc = r.DecodeBytes(yys722Slc, true, true)
		yys722 := string(yys722Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys722 {
		case "kind":
			if r.TryDecodeAsNil() {
				x.Kind = ""
			} else {
				x.Kind = string(r.DecodeString())
			}
		case "apiVersion":
			if r.TryDecodeAsNil() {
				x.APIVersion = ""
			} else {
				x.APIVersion = string(r.DecodeString())
			}
		case "name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "generateName":
			if r.TryDecodeAsNil() {
				x.GenerateName = ""
			} else {
				x.GenerateName = string(r.DecodeString())
			}
		case "namespace":
			if r.TryDecodeAsNil() {
				x.Namespace = ""
			} else {
				x.Namespace = string(r.DecodeString())
			}
		case "selfLink":
			if r.TryDecodeAsNil() {
				x.SelfLink = ""
			} else {
				x.SelfLink = string(r.DecodeString())
			}
		case "uid":
			if r.TryDecodeAsNil() {
				x.UID = ""
			} else {
				x.UID = pkg3_types.UID(r.DecodeString())
			}
		case "resourceVersion":
			if r.TryDecodeAsNil() {
				x.ResourceVersion = ""
			} else {
				x.ResourceVersion = string(r.DecodeString())
			}
		case "generation":
			if r.TryDecodeAsNil() {
				x.Generation = 0
			} else {
				x.Generation = int64(r.DecodeInt(64))
			}
		case "creationTimestamp":
			if r.TryDecodeAsNil() {
				x.CreationTimestamp = pkg1_v1.Time{}
			} else {
				yyv732 := &x.CreationTimestamp
				yym733 := z.DecBinary()
				_ = yym733
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv732) {
				} else if yym733 {
					z.DecBinaryUnmarshal(yyv732)
				} else if !yym733 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv732)
				} else {
					z.DecFallback(yyv732, false)
				}
			}
		case "deletionTimestamp":
			if x.ObjectMeta.DeletionTimestamp == nil {
				x.ObjectMeta.DeletionTimestamp = new(pkg1_v1.Time)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionTimestamp != nil {
					x.DeletionTimestamp = nil
				}
			} else {
				if x.DeletionTimestamp == nil {
					x.DeletionTimestamp = new(pkg1_v1.Time)
				}
				yym735 := z.DecBinary()
				_ = yym735
				if false {
				} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
				} else if yym735 {
					z.DecBinaryUnmarshal(x.DeletionTimestamp)
				} else if !yym735 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(x.DeletionTimestamp)
				} else {
					z.DecFallback(x.DeletionTimestamp, false)
				}
			}
		case "deletionGracePeriodSeconds":
			if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
				x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
			}
			if r.TryDecodeAsNil() {
				if x.DeletionGracePeriodSeconds != nil {
					x.DeletionGracePeriodSeconds = nil
				}
			} else {
				if x.DeletionGracePeriodSeconds == nil {
					x.DeletionGracePeriodSeconds = new(int64)
				}
				yym737 := z.DecBinary()
				_ = yym737
				if false {
				} else {
					*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
				}
			}
		case "labels":
			if r.TryDecodeAsNil() {
				x.Labels = nil
			} else {
				yyv738 := &x.Labels
				yym739 := z.DecBinary()
				_ = yym739
				if false {
				} else {
					z.F.DecMapStringStringX(yyv738, false, d)
				}
			}
		case "annotations":
			if r.TryDecodeAsNil() {
				x.Annotations = nil
			} else {
				yyv740 := &x.Annotations
				yym741 := z.DecBinary()
				_ = yym741
				if false {
				} else {
					z.F.DecMapStringStringX(yyv740, false, d)
				}
			}
		case "ownerReferences":
			if r.TryDecodeAsNil() {
				x.OwnerReferences = nil
			} else {
				yyv742 := &x.OwnerReferences
				yym743 := z.DecBinary()
				_ = yym743
				if false {
				} else {
					h.decSlicev1_OwnerReference((*[]pkg2_v1.OwnerReference)(yyv742), d)
				}
			}
		case "finalizers":
			if r.TryDecodeAsNil() {
				x.Finalizers = nil
			} else {
				yyv744 := &x.Finalizers
				yym745 := z.DecBinary()
				_ = yym745
				if false {
				} else {
					z.F.DecSliceStringX(yyv744, false, d)
				}
			}
		case "clusterName":
			if r.TryDecodeAsNil() {
				x.ClusterName = ""
			} else {
				x.ClusterName = string(r.DecodeString())
			}
		case "Spec":
			if r.TryDecodeAsNil() {
				x.Spec = BindingSpec{}
			} else {
				yyv747 := &x.Spec
				yyv747.CodecDecodeSelf(d)
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = BindingStatus{}
			} else {
				yyv748 := &x.Status
				yyv748.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys722)
		} // end switch yys722
	} // end for yyj722
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *Binding) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj749 int
	var yyb749 bool
	var yyhl749 bool = l >= 0
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Kind = ""
	} else {
		x.Kind = string(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.APIVersion = ""
	} else {
		x.APIVersion = string(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.GenerateName = ""
	} else {
		x.GenerateName = string(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Namespace = ""
	} else {
		x.Namespace = string(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SelfLink = ""
	} else {
		x.SelfLink = string(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.UID = ""
	} else {
		x.UID = pkg3_types.UID(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ResourceVersion = ""
	} else {
		x.ResourceVersion = string(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Generation = 0
	} else {
		x.Generation = int64(r.DecodeInt(64))
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.CreationTimestamp = pkg1_v1.Time{}
	} else {
		yyv759 := &x.CreationTimestamp
		yym760 := z.DecBinary()
		_ = yym760
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv759) {
		} else if yym760 {
			z.DecBinaryUnmarshal(yyv759)
		} else if !yym760 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv759)
		} else {
			z.DecFallback(yyv759, false)
		}
	}
	if x.ObjectMeta.DeletionTimestamp == nil {
		x.ObjectMeta.DeletionTimestamp = new(pkg1_v1.Time)
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionTimestamp != nil {
			x.DeletionTimestamp = nil
		}
	} else {
		if x.DeletionTimestamp == nil {
			x.DeletionTimestamp = new(pkg1_v1.Time)
		}
		yym762 := z.DecBinary()
		_ = yym762
		if false {
		} else if z.HasExtensions() && z.DecExt(x.DeletionTimestamp) {
		} else if yym762 {
			z.DecBinaryUnmarshal(x.DeletionTimestamp)
		} else if !yym762 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(x.DeletionTimestamp)
		} else {
			z.DecFallback(x.DeletionTimestamp, false)
		}
	}
	if x.ObjectMeta.DeletionGracePeriodSeconds == nil {
		x.ObjectMeta.DeletionGracePeriodSeconds = new(int64)
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		if x.DeletionGracePeriodSeconds != nil {
			x.DeletionGracePeriodSeconds = nil
		}
	} else {
		if x.DeletionGracePeriodSeconds == nil {
			x.DeletionGracePeriodSeconds = new(int64)
		}
		yym764 := z.DecBinary()
		_ = yym764
		if false {
		} else {
			*((*int64)(x.DeletionGracePeriodSeconds)) = int64(r.DecodeInt(64))
		}
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Labels = nil
	} else {
		yyv765 := &x.Labels
		yym766 := z.DecBinary()
		_ = yym766
		if false {
		} else {
			z.F.DecMapStringStringX(yyv765, false, d)
		}
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Annotations = nil
	} else {
		yyv767 := &x.Annotations
		yym768 := z.DecBinary()
		_ = yym768
		if false {
		} else {
			z.F.DecMapStringStringX(yyv767, false, d)
		}
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OwnerReferences = nil
	} else {
		yyv769 := &x.OwnerReferences
		yym770 := z.DecBinary()
		_ = yym770
		if false {
		} else {
			h.decSlicev1_OwnerReference((*[]pkg2_v1.OwnerReference)(yyv769), d)
		}
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Finalizers = nil
	} else {
		yyv771 := &x.Finalizers
		yym772 := z.DecBinary()
		_ = yym772
		if false {
		} else {
			z.F.DecSliceStringX(yyv771, false, d)
		}
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ClusterName = ""
	} else {
		x.ClusterName = string(r.DecodeString())
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Spec = BindingSpec{}
	} else {
		yyv774 := &x.Spec
		yyv774.CodecDecodeSelf(d)
	}
	yyj749++
	if yyhl749 {
		yyb749 = yyj749 > l
	} else {
		yyb749 = r.CheckBreak()
	}
	if yyb749 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = BindingStatus{}
	} else {
		yyv775 := &x.Status
		yyv775.CodecDecodeSelf(d)
	}
	for {
		yyj749++
		if yyhl749 {
			yyb749 = yyj749 > l
		} else {
			yyb749 = r.CheckBreak()
		}
		if yyb749 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj749-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *BindingSpec) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym776 := z.EncBinary()
		_ = yym776
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep777 := !z.EncBinary()
			yy2arr777 := z.EncBasicHandle().StructToArray
			var yyq777 [8]bool
			_, _, _ = yysep777, yyq777, yy2arr777
			const yyr777 bool = false
			var yynn777 int
			if yyr777 || yy2arr777 {
				r.EncodeArrayStart(8)
			} else {
				yynn777 = 8
				for _, b := range yyq777 {
					if b {
						yynn777++
					}
				}
				r.EncodeMapStart(yynn777)
				yynn777 = 0
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy779 := &x.InstanceRef
				yy779.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("InstanceRef"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy780 := &x.InstanceRef
				yy780.CodecEncodeSelf(e)
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yy782 := &x.AppLabelSelector
				yym783 := z.EncBinary()
				_ = yym783
				if false {
				} else if z.HasExtensions() && z.EncExt(yy782) {
				} else {
					z.EncFallback(yy782)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("AppLabelSelector"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yy784 := &x.AppLabelSelector
				yym785 := z.EncBinary()
				_ = yym785
				if false {
				} else if z.HasExtensions() && z.EncExt(yy784) {
				} else {
					z.EncFallback(yy784)
				}
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Parameters == nil {
					r.EncodeNil()
				} else {
					yym787 := z.EncBinary()
					_ = yym787
					if false {
					} else {
						z.F.EncMapStringIntfV(x.Parameters, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Parameters"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Parameters == nil {
					r.EncodeNil()
				} else {
					yym788 := z.EncBinary()
					_ = yym788
					if false {
					} else {
						z.F.EncMapStringIntfV(x.Parameters, false, e)
					}
				}
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym790 := z.EncBinary()
				_ = yym790
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.SecretRef))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("SecretRef"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym791 := z.EncBinary()
				_ = yym791
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.SecretRef))
				}
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym793 := z.EncBinary()
				_ = yym793
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.ServiceRef))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("ServiceRef"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym794 := z.EncBinary()
				_ = yym794
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.ServiceRef))
				}
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym796 := z.EncBinary()
				_ = yym796
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.ConfigMapRef))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("ConfigMapRef"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym797 := z.EncBinary()
				_ = yym797
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.ConfigMapRef))
				}
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym799 := z.EncBinary()
				_ = yym799
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.ServiceInjectionPolicyRef))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("ServiceInjectionPolicyRef"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym800 := z.EncBinary()
				_ = yym800
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.ServiceInjectionPolicyRef))
				}
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym802 := z.EncBinary()
				_ = yym802
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("OSBGUID"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym803 := z.EncBinary()
				_ = yym803
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.OSBGUID))
				}
			}
			if yyr777 || yy2arr777 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *BindingSpec) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym804 := z.DecBinary()
	_ = yym804
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct805 := r.ContainerType()
		if yyct805 == codecSelferValueTypeMap1234 {
			yyl805 := r.ReadMapStart()
			if yyl805 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl805, d)
			}
		} else if yyct805 == codecSelferValueTypeArray1234 {
			yyl805 := r.ReadArrayStart()
			if yyl805 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl805, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *BindingSpec) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys806Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys806Slc
	var yyhl806 bool = l >= 0
	for yyj806 := 0; ; yyj806++ {
		if yyhl806 {
			if yyj806 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys806Slc = r.DecodeBytes(yys806Slc, true, true)
		yys806 := string(yys806Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys806 {
		case "InstanceRef":
			if r.TryDecodeAsNil() {
				x.InstanceRef = pkg2_v1.ObjectReference{}
			} else {
				yyv807 := &x.InstanceRef
				yyv807.CodecDecodeSelf(d)
			}
		case "AppLabelSelector":
			if r.TryDecodeAsNil() {
				x.AppLabelSelector = pkg1_v1.LabelSelector{}
			} else {
				yyv808 := &x.AppLabelSelector
				yym809 := z.DecBinary()
				_ = yym809
				if false {
				} else if z.HasExtensions() && z.DecExt(yyv808) {
				} else {
					z.DecFallback(yyv808, false)
				}
			}
		case "Parameters":
			if r.TryDecodeAsNil() {
				x.Parameters = nil
			} else {
				yyv810 := &x.Parameters
				yym811 := z.DecBinary()
				_ = yym811
				if false {
				} else {
					z.F.DecMapStringIntfX(yyv810, false, d)
				}
			}
		case "SecretRef":
			if r.TryDecodeAsNil() {
				x.SecretRef = ""
			} else {
				x.SecretRef = string(r.DecodeString())
			}
		case "ServiceRef":
			if r.TryDecodeAsNil() {
				x.ServiceRef = ""
			} else {
				x.ServiceRef = string(r.DecodeString())
			}
		case "ConfigMapRef":
			if r.TryDecodeAsNil() {
				x.ConfigMapRef = ""
			} else {
				x.ConfigMapRef = string(r.DecodeString())
			}
		case "ServiceInjectionPolicyRef":
			if r.TryDecodeAsNil() {
				x.ServiceInjectionPolicyRef = ""
			} else {
				x.ServiceInjectionPolicyRef = string(r.DecodeString())
			}
		case "OSBGUID":
			if r.TryDecodeAsNil() {
				x.OSBGUID = ""
			} else {
				x.OSBGUID = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys806)
		} // end switch yys806
	} // end for yyj806
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *BindingSpec) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj817 int
	var yyb817 bool
	var yyhl817 bool = l >= 0
	yyj817++
	if yyhl817 {
		yyb817 = yyj817 > l
	} else {
		yyb817 = r.CheckBreak()
	}
	if yyb817 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.InstanceRef = pkg2_v1.ObjectReference{}
	} else {
		yyv818 := &x.InstanceRef
		yyv818.CodecDecodeSelf(d)
	}
	yyj817++
	if yyhl817 {
		yyb817 = yyj817 > l
	} else {
		yyb817 = r.CheckBreak()
	}
	if yyb817 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.AppLabelSelector = pkg1_v1.LabelSelector{}
	} else {
		yyv819 := &x.AppLabelSelector
		yym820 := z.DecBinary()
		_ = yym820
		if false {
		} else if z.HasExtensions() && z.DecExt(yyv819) {
		} else {
			z.DecFallback(yyv819, false)
		}
	}
	yyj817++
	if yyhl817 {
		yyb817 = yyj817 > l
	} else {
		yyb817 = r.CheckBreak()
	}
	if yyb817 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Parameters = nil
	} else {
		yyv821 := &x.Parameters
		yym822 := z.DecBinary()
		_ = yym822
		if false {
		} else {
			z.F.DecMapStringIntfX(yyv821, false, d)
		}
	}
	yyj817++
	if yyhl817 {
		yyb817 = yyj817 > l
	} else {
		yyb817 = r.CheckBreak()
	}
	if yyb817 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.SecretRef = ""
	} else {
		x.SecretRef = string(r.DecodeString())
	}
	yyj817++
	if yyhl817 {
		yyb817 = yyj817 > l
	} else {
		yyb817 = r.CheckBreak()
	}
	if yyb817 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ServiceRef = ""
	} else {
		x.ServiceRef = string(r.DecodeString())
	}
	yyj817++
	if yyhl817 {
		yyb817 = yyj817 > l
	} else {
		yyb817 = r.CheckBreak()
	}
	if yyb817 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ConfigMapRef = ""
	} else {
		x.ConfigMapRef = string(r.DecodeString())
	}
	yyj817++
	if yyhl817 {
		yyb817 = yyj817 > l
	} else {
		yyb817 = r.CheckBreak()
	}
	if yyb817 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.ServiceInjectionPolicyRef = ""
	} else {
		x.ServiceInjectionPolicyRef = string(r.DecodeString())
	}
	yyj817++
	if yyhl817 {
		yyb817 = yyj817 > l
	} else {
		yyb817 = r.CheckBreak()
	}
	if yyb817 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.OSBGUID = ""
	} else {
		x.OSBGUID = string(r.DecodeString())
	}
	for {
		yyj817++
		if yyhl817 {
			yyb817 = yyj817 > l
		} else {
			yyb817 = r.CheckBreak()
		}
		if yyb817 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj817-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *BindingStatus) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym828 := z.EncBinary()
		_ = yym828
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep829 := !z.EncBinary()
			yy2arr829 := z.EncBasicHandle().StructToArray
			var yyq829 [1]bool
			_, _, _ = yysep829, yyq829, yy2arr829
			const yyr829 bool = false
			var yynn829 int
			if yyr829 || yy2arr829 {
				r.EncodeArrayStart(1)
			} else {
				yynn829 = 1
				for _, b := range yyq829 {
					if b {
						yynn829++
					}
				}
				r.EncodeMapStart(yynn829)
				yynn829 = 0
			}
			if yyr829 || yy2arr829 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				if x.Conditions == nil {
					r.EncodeNil()
				} else {
					yym831 := z.EncBinary()
					_ = yym831
					if false {
					} else {
						h.encSliceBindingCondition(([]BindingCondition)(x.Conditions), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Conditions"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				if x.Conditions == nil {
					r.EncodeNil()
				} else {
					yym832 := z.EncBinary()
					_ = yym832
					if false {
					} else {
						h.encSliceBindingCondition(([]BindingCondition)(x.Conditions), e)
					}
				}
			}
			if yyr829 || yy2arr829 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *BindingStatus) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym833 := z.DecBinary()
	_ = yym833
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct834 := r.ContainerType()
		if yyct834 == codecSelferValueTypeMap1234 {
			yyl834 := r.ReadMapStart()
			if yyl834 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl834, d)
			}
		} else if yyct834 == codecSelferValueTypeArray1234 {
			yyl834 := r.ReadArrayStart()
			if yyl834 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl834, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *BindingStatus) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys835Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys835Slc
	var yyhl835 bool = l >= 0
	for yyj835 := 0; ; yyj835++ {
		if yyhl835 {
			if yyj835 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys835Slc = r.DecodeBytes(yys835Slc, true, true)
		yys835 := string(yys835Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys835 {
		case "Conditions":
			if r.TryDecodeAsNil() {
				x.Conditions = nil
			} else {
				yyv836 := &x.Conditions
				yym837 := z.DecBinary()
				_ = yym837
				if false {
				} else {
					h.decSliceBindingCondition((*[]BindingCondition)(yyv836), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys835)
		} // end switch yys835
	} // end for yyj835
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *BindingStatus) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj838 int
	var yyb838 bool
	var yyhl838 bool = l >= 0
	yyj838++
	if yyhl838 {
		yyb838 = yyj838 > l
	} else {
		yyb838 = r.CheckBreak()
	}
	if yyb838 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Conditions = nil
	} else {
		yyv839 := &x.Conditions
		yym840 := z.DecBinary()
		_ = yym840
		if false {
		} else {
			h.decSliceBindingCondition((*[]BindingCondition)(yyv839), d)
		}
	}
	for {
		yyj838++
		if yyhl838 {
			yyb838 = yyj838 > l
		} else {
			yyb838 = r.CheckBreak()
		}
		if yyb838 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj838-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x *BindingCondition) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym841 := z.EncBinary()
		_ = yym841
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep842 := !z.EncBinary()
			yy2arr842 := z.EncBasicHandle().StructToArray
			var yyq842 [4]bool
			_, _, _ = yysep842, yyq842, yy2arr842
			const yyr842 bool = false
			var yynn842 int
			if yyr842 || yy2arr842 {
				r.EncodeArrayStart(4)
			} else {
				yynn842 = 4
				for _, b := range yyq842 {
					if b {
						yynn842++
					}
				}
				r.EncodeMapStart(yynn842)
				yynn842 = 0
			}
			if yyr842 || yy2arr842 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				x.Type.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Type"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				x.Type.CodecEncodeSelf(e)
			}
			if yyr842 || yy2arr842 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				x.Status.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				x.Status.CodecEncodeSelf(e)
			}
			if yyr842 || yy2arr842 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym846 := z.EncBinary()
				_ = yym846
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Reason))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Reason"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym847 := z.EncBinary()
				_ = yym847
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Reason))
				}
			}
			if yyr842 || yy2arr842 {
				z.EncSendContainerState(codecSelfer_containerArrayElem1234)
				yym849 := z.EncBinary()
				_ = yym849
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Message))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey1234)
				r.EncodeString(codecSelferC_UTF81234, string("Message"))
				z.EncSendContainerState(codecSelfer_containerMapValue1234)
				yym850 := z.EncBinary()
				_ = yym850
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF81234, string(x.Message))
				}
			}
			if yyr842 || yy2arr842 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd1234)
			}
		}
	}
}

func (x *BindingCondition) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym851 := z.DecBinary()
	_ = yym851
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct852 := r.ContainerType()
		if yyct852 == codecSelferValueTypeMap1234 {
			yyl852 := r.ReadMapStart()
			if yyl852 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd1234)
			} else {
				x.codecDecodeSelfFromMap(yyl852, d)
			}
		} else if yyct852 == codecSelferValueTypeArray1234 {
			yyl852 := r.ReadArrayStart()
			if yyl852 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
			} else {
				x.codecDecodeSelfFromArray(yyl852, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr1234)
		}
	}
}

func (x *BindingCondition) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys853Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys853Slc
	var yyhl853 bool = l >= 0
	for yyj853 := 0; ; yyj853++ {
		if yyhl853 {
			if yyj853 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey1234)
		yys853Slc = r.DecodeBytes(yys853Slc, true, true)
		yys853 := string(yys853Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue1234)
		switch yys853 {
		case "Type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				x.Type = BindingConditionType(r.DecodeString())
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = ConditionStatus(r.DecodeString())
			}
		case "Reason":
			if r.TryDecodeAsNil() {
				x.Reason = ""
			} else {
				x.Reason = string(r.DecodeString())
			}
		case "Message":
			if r.TryDecodeAsNil() {
				x.Message = ""
			} else {
				x.Message = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys853)
		} // end switch yys853
	} // end for yyj853
	z.DecSendContainerState(codecSelfer_containerMapEnd1234)
}

func (x *BindingCondition) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj858 int
	var yyb858 bool
	var yyhl858 bool = l >= 0
	yyj858++
	if yyhl858 {
		yyb858 = yyj858 > l
	} else {
		yyb858 = r.CheckBreak()
	}
	if yyb858 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		x.Type = BindingConditionType(r.DecodeString())
	}
	yyj858++
	if yyhl858 {
		yyb858 = yyj858 > l
	} else {
		yyb858 = r.CheckBreak()
	}
	if yyb858 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = ConditionStatus(r.DecodeString())
	}
	yyj858++
	if yyhl858 {
		yyb858 = yyj858 > l
	} else {
		yyb858 = r.CheckBreak()
	}
	if yyb858 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Reason = ""
	} else {
		x.Reason = string(r.DecodeString())
	}
	yyj858++
	if yyhl858 {
		yyb858 = yyj858 > l
	} else {
		yyb858 = r.CheckBreak()
	}
	if yyb858 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem1234)
	if r.TryDecodeAsNil() {
		x.Message = ""
	} else {
		x.Message = string(r.DecodeString())
	}
	for {
		yyj858++
		if yyhl858 {
			yyb858 = yyj858 > l
		} else {
			yyb858 = r.CheckBreak()
		}
		if yyb858 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem1234)
		z.DecStructFieldNotFound(yyj858-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x BindingConditionType) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	yym863 := z.EncBinary()
	_ = yym863
	if false {
	} else if z.HasExtensions() && z.EncExt(x) {
	} else {
		r.EncodeString(codecSelferC_UTF81234, string(x))
	}
}

func (x *BindingConditionType) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym864 := z.DecBinary()
	_ = yym864
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		*((*string)(x)) = r.DecodeString()
	}
}

func (x codecSelfer1234) encSliceBroker(v []Broker, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv865 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy866 := &yyv865
		yy866.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceBroker(v *[]Broker, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv867 := *v
	yyh867, yyl867 := z.DecSliceHelperStart()
	var yyc867 bool
	if yyl867 == 0 {
		if yyv867 == nil {
			yyv867 = []Broker{}
			yyc867 = true
		} else if len(yyv867) != 0 {
			yyv867 = yyv867[:0]
			yyc867 = true
		}
	} else if yyl867 > 0 {
		var yyrr867, yyrl867 int
		var yyrt867 bool
		if yyl867 > cap(yyv867) {

			yyrg867 := len(yyv867) > 0
			yyv2867 := yyv867
			yyrl867, yyrt867 = z.DecInferLen(yyl867, z.DecBasicHandle().MaxInitLen, 344)
			if yyrt867 {
				if yyrl867 <= cap(yyv867) {
					yyv867 = yyv867[:yyrl867]
				} else {
					yyv867 = make([]Broker, yyrl867)
				}
			} else {
				yyv867 = make([]Broker, yyrl867)
			}
			yyc867 = true
			yyrr867 = len(yyv867)
			if yyrg867 {
				copy(yyv867, yyv2867)
			}
		} else if yyl867 != len(yyv867) {
			yyv867 = yyv867[:yyl867]
			yyc867 = true
		}
		yyj867 := 0
		for ; yyj867 < yyrr867; yyj867++ {
			yyh867.ElemContainerState(yyj867)
			if r.TryDecodeAsNil() {
				yyv867[yyj867] = Broker{}
			} else {
				yyv868 := &yyv867[yyj867]
				yyv868.CodecDecodeSelf(d)
			}

		}
		if yyrt867 {
			for ; yyj867 < yyl867; yyj867++ {
				yyv867 = append(yyv867, Broker{})
				yyh867.ElemContainerState(yyj867)
				if r.TryDecodeAsNil() {
					yyv867[yyj867] = Broker{}
				} else {
					yyv869 := &yyv867[yyj867]
					yyv869.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj867 := 0
		for ; !r.CheckBreak(); yyj867++ {

			if yyj867 >= len(yyv867) {
				yyv867 = append(yyv867, Broker{}) // var yyz867 Broker
				yyc867 = true
			}
			yyh867.ElemContainerState(yyj867)
			if yyj867 < len(yyv867) {
				if r.TryDecodeAsNil() {
					yyv867[yyj867] = Broker{}
				} else {
					yyv870 := &yyv867[yyj867]
					yyv870.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj867 < len(yyv867) {
			yyv867 = yyv867[:yyj867]
			yyc867 = true
		} else if yyj867 == 0 && yyv867 == nil {
			yyv867 = []Broker{}
			yyc867 = true
		}
	}
	yyh867.End()
	if yyc867 {
		*v = yyv867
	}
}

func (x codecSelfer1234) encSliceBrokerCondition(v []BrokerCondition, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv871 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy872 := &yyv871
		yy872.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceBrokerCondition(v *[]BrokerCondition, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv873 := *v
	yyh873, yyl873 := z.DecSliceHelperStart()
	var yyc873 bool
	if yyl873 == 0 {
		if yyv873 == nil {
			yyv873 = []BrokerCondition{}
			yyc873 = true
		} else if len(yyv873) != 0 {
			yyv873 = yyv873[:0]
			yyc873 = true
		}
	} else if yyl873 > 0 {
		var yyrr873, yyrl873 int
		var yyrt873 bool
		if yyl873 > cap(yyv873) {

			yyrg873 := len(yyv873) > 0
			yyv2873 := yyv873
			yyrl873, yyrt873 = z.DecInferLen(yyl873, z.DecBasicHandle().MaxInitLen, 64)
			if yyrt873 {
				if yyrl873 <= cap(yyv873) {
					yyv873 = yyv873[:yyrl873]
				} else {
					yyv873 = make([]BrokerCondition, yyrl873)
				}
			} else {
				yyv873 = make([]BrokerCondition, yyrl873)
			}
			yyc873 = true
			yyrr873 = len(yyv873)
			if yyrg873 {
				copy(yyv873, yyv2873)
			}
		} else if yyl873 != len(yyv873) {
			yyv873 = yyv873[:yyl873]
			yyc873 = true
		}
		yyj873 := 0
		for ; yyj873 < yyrr873; yyj873++ {
			yyh873.ElemContainerState(yyj873)
			if r.TryDecodeAsNil() {
				yyv873[yyj873] = BrokerCondition{}
			} else {
				yyv874 := &yyv873[yyj873]
				yyv874.CodecDecodeSelf(d)
			}

		}
		if yyrt873 {
			for ; yyj873 < yyl873; yyj873++ {
				yyv873 = append(yyv873, BrokerCondition{})
				yyh873.ElemContainerState(yyj873)
				if r.TryDecodeAsNil() {
					yyv873[yyj873] = BrokerCondition{}
				} else {
					yyv875 := &yyv873[yyj873]
					yyv875.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj873 := 0
		for ; !r.CheckBreak(); yyj873++ {

			if yyj873 >= len(yyv873) {
				yyv873 = append(yyv873, BrokerCondition{}) // var yyz873 BrokerCondition
				yyc873 = true
			}
			yyh873.ElemContainerState(yyj873)
			if yyj873 < len(yyv873) {
				if r.TryDecodeAsNil() {
					yyv873[yyj873] = BrokerCondition{}
				} else {
					yyv876 := &yyv873[yyj873]
					yyv876.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj873 < len(yyv873) {
			yyv873 = yyv873[:yyj873]
			yyc873 = true
		} else if yyj873 == 0 && yyv873 == nil {
			yyv873 = []BrokerCondition{}
			yyc873 = true
		}
	}
	yyh873.End()
	if yyc873 {
		*v = yyv873
	}
}

func (x codecSelfer1234) encSliceServiceClass(v []ServiceClass, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv877 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy878 := &yyv877
		yy878.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceServiceClass(v *[]ServiceClass, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv879 := *v
	yyh879, yyl879 := z.DecSliceHelperStart()
	var yyc879 bool
	if yyl879 == 0 {
		if yyv879 == nil {
			yyv879 = []ServiceClass{}
			yyc879 = true
		} else if len(yyv879) != 0 {
			yyv879 = yyv879[:0]
			yyc879 = true
		}
	} else if yyl879 > 0 {
		var yyrr879, yyrl879 int
		var yyrt879 bool
		if yyl879 > cap(yyv879) {

			yyrg879 := len(yyv879) > 0
			yyv2879 := yyv879
			yyrl879, yyrt879 = z.DecInferLen(yyl879, z.DecBasicHandle().MaxInitLen, 456)
			if yyrt879 {
				if yyrl879 <= cap(yyv879) {
					yyv879 = yyv879[:yyrl879]
				} else {
					yyv879 = make([]ServiceClass, yyrl879)
				}
			} else {
				yyv879 = make([]ServiceClass, yyrl879)
			}
			yyc879 = true
			yyrr879 = len(yyv879)
			if yyrg879 {
				copy(yyv879, yyv2879)
			}
		} else if yyl879 != len(yyv879) {
			yyv879 = yyv879[:yyl879]
			yyc879 = true
		}
		yyj879 := 0
		for ; yyj879 < yyrr879; yyj879++ {
			yyh879.ElemContainerState(yyj879)
			if r.TryDecodeAsNil() {
				yyv879[yyj879] = ServiceClass{}
			} else {
				yyv880 := &yyv879[yyj879]
				yyv880.CodecDecodeSelf(d)
			}

		}
		if yyrt879 {
			for ; yyj879 < yyl879; yyj879++ {
				yyv879 = append(yyv879, ServiceClass{})
				yyh879.ElemContainerState(yyj879)
				if r.TryDecodeAsNil() {
					yyv879[yyj879] = ServiceClass{}
				} else {
					yyv881 := &yyv879[yyj879]
					yyv881.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj879 := 0
		for ; !r.CheckBreak(); yyj879++ {

			if yyj879 >= len(yyv879) {
				yyv879 = append(yyv879, ServiceClass{}) // var yyz879 ServiceClass
				yyc879 = true
			}
			yyh879.ElemContainerState(yyj879)
			if yyj879 < len(yyv879) {
				if r.TryDecodeAsNil() {
					yyv879[yyj879] = ServiceClass{}
				} else {
					yyv882 := &yyv879[yyj879]
					yyv882.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj879 < len(yyv879) {
			yyv879 = yyv879[:yyj879]
			yyc879 = true
		} else if yyj879 == 0 && yyv879 == nil {
			yyv879 = []ServiceClass{}
			yyc879 = true
		}
	}
	yyh879.End()
	if yyc879 {
		*v = yyv879
	}
}

func (x codecSelfer1234) encSlicev1_OwnerReference(v []pkg2_v1.OwnerReference, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv883 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy884 := &yyv883
		yy884.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSlicev1_OwnerReference(v *[]pkg2_v1.OwnerReference, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv885 := *v
	yyh885, yyl885 := z.DecSliceHelperStart()
	var yyc885 bool
	if yyl885 == 0 {
		if yyv885 == nil {
			yyv885 = []pkg2_v1.OwnerReference{}
			yyc885 = true
		} else if len(yyv885) != 0 {
			yyv885 = yyv885[:0]
			yyc885 = true
		}
	} else if yyl885 > 0 {
		var yyrr885, yyrl885 int
		var yyrt885 bool
		if yyl885 > cap(yyv885) {

			yyrg885 := len(yyv885) > 0
			yyv2885 := yyv885
			yyrl885, yyrt885 = z.DecInferLen(yyl885, z.DecBasicHandle().MaxInitLen, 72)
			if yyrt885 {
				if yyrl885 <= cap(yyv885) {
					yyv885 = yyv885[:yyrl885]
				} else {
					yyv885 = make([]pkg2_v1.OwnerReference, yyrl885)
				}
			} else {
				yyv885 = make([]pkg2_v1.OwnerReference, yyrl885)
			}
			yyc885 = true
			yyrr885 = len(yyv885)
			if yyrg885 {
				copy(yyv885, yyv2885)
			}
		} else if yyl885 != len(yyv885) {
			yyv885 = yyv885[:yyl885]
			yyc885 = true
		}
		yyj885 := 0
		for ; yyj885 < yyrr885; yyj885++ {
			yyh885.ElemContainerState(yyj885)
			if r.TryDecodeAsNil() {
				yyv885[yyj885] = pkg2_v1.OwnerReference{}
			} else {
				yyv886 := &yyv885[yyj885]
				yyv886.CodecDecodeSelf(d)
			}

		}
		if yyrt885 {
			for ; yyj885 < yyl885; yyj885++ {
				yyv885 = append(yyv885, pkg2_v1.OwnerReference{})
				yyh885.ElemContainerState(yyj885)
				if r.TryDecodeAsNil() {
					yyv885[yyj885] = pkg2_v1.OwnerReference{}
				} else {
					yyv887 := &yyv885[yyj885]
					yyv887.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj885 := 0
		for ; !r.CheckBreak(); yyj885++ {

			if yyj885 >= len(yyv885) {
				yyv885 = append(yyv885, pkg2_v1.OwnerReference{}) // var yyz885 pkg2_v1.OwnerReference
				yyc885 = true
			}
			yyh885.ElemContainerState(yyj885)
			if yyj885 < len(yyv885) {
				if r.TryDecodeAsNil() {
					yyv885[yyj885] = pkg2_v1.OwnerReference{}
				} else {
					yyv888 := &yyv885[yyj885]
					yyv888.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj885 < len(yyv885) {
			yyv885 = yyv885[:yyj885]
			yyc885 = true
		} else if yyj885 == 0 && yyv885 == nil {
			yyv885 = []pkg2_v1.OwnerReference{}
			yyc885 = true
		}
	}
	yyh885.End()
	if yyc885 {
		*v = yyv885
	}
}

func (x codecSelfer1234) encSliceServicePlan(v []ServicePlan, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv889 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy890 := &yyv889
		yy890.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceServicePlan(v *[]ServicePlan, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv891 := *v
	yyh891, yyl891 := z.DecSliceHelperStart()
	var yyc891 bool
	if yyl891 == 0 {
		if yyv891 == nil {
			yyv891 = []ServicePlan{}
			yyc891 = true
		} else if len(yyv891) != 0 {
			yyv891 = yyv891[:0]
			yyc891 = true
		}
	} else if yyl891 > 0 {
		var yyrr891, yyrl891 int
		var yyrt891 bool
		if yyl891 > cap(yyv891) {

			yyrg891 := len(yyv891) > 0
			yyv2891 := yyv891
			yyrl891, yyrt891 = z.DecInferLen(yyl891, z.DecBasicHandle().MaxInitLen, 56)
			if yyrt891 {
				if yyrl891 <= cap(yyv891) {
					yyv891 = yyv891[:yyrl891]
				} else {
					yyv891 = make([]ServicePlan, yyrl891)
				}
			} else {
				yyv891 = make([]ServicePlan, yyrl891)
			}
			yyc891 = true
			yyrr891 = len(yyv891)
			if yyrg891 {
				copy(yyv891, yyv2891)
			}
		} else if yyl891 != len(yyv891) {
			yyv891 = yyv891[:yyl891]
			yyc891 = true
		}
		yyj891 := 0
		for ; yyj891 < yyrr891; yyj891++ {
			yyh891.ElemContainerState(yyj891)
			if r.TryDecodeAsNil() {
				yyv891[yyj891] = ServicePlan{}
			} else {
				yyv892 := &yyv891[yyj891]
				yyv892.CodecDecodeSelf(d)
			}

		}
		if yyrt891 {
			for ; yyj891 < yyl891; yyj891++ {
				yyv891 = append(yyv891, ServicePlan{})
				yyh891.ElemContainerState(yyj891)
				if r.TryDecodeAsNil() {
					yyv891[yyj891] = ServicePlan{}
				} else {
					yyv893 := &yyv891[yyj891]
					yyv893.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj891 := 0
		for ; !r.CheckBreak(); yyj891++ {

			if yyj891 >= len(yyv891) {
				yyv891 = append(yyv891, ServicePlan{}) // var yyz891 ServicePlan
				yyc891 = true
			}
			yyh891.ElemContainerState(yyj891)
			if yyj891 < len(yyv891) {
				if r.TryDecodeAsNil() {
					yyv891[yyj891] = ServicePlan{}
				} else {
					yyv894 := &yyv891[yyj891]
					yyv894.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj891 < len(yyv891) {
			yyv891 = yyv891[:yyj891]
			yyc891 = true
		} else if yyj891 == 0 && yyv891 == nil {
			yyv891 = []ServicePlan{}
			yyc891 = true
		}
	}
	yyh891.End()
	if yyc891 {
		*v = yyv891
	}
}

func (x codecSelfer1234) encSliceInstance(v []Instance, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv895 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy896 := &yyv895
		yy896.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceInstance(v *[]Instance, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv897 := *v
	yyh897, yyl897 := z.DecSliceHelperStart()
	var yyc897 bool
	if yyl897 == 0 {
		if yyv897 == nil {
			yyv897 = []Instance{}
			yyc897 = true
		} else if len(yyv897) != 0 {
			yyv897 = yyv897[:0]
			yyc897 = true
		}
	} else if yyl897 > 0 {
		var yyrr897, yyrl897 int
		var yyrt897 bool
		if yyl897 > cap(yyv897) {

			yyrg897 := len(yyv897) > 0
			yyv2897 := yyv897
			yyrl897, yyrt897 = z.DecInferLen(yyl897, z.DecBasicHandle().MaxInitLen, 464)
			if yyrt897 {
				if yyrl897 <= cap(yyv897) {
					yyv897 = yyv897[:yyrl897]
				} else {
					yyv897 = make([]Instance, yyrl897)
				}
			} else {
				yyv897 = make([]Instance, yyrl897)
			}
			yyc897 = true
			yyrr897 = len(yyv897)
			if yyrg897 {
				copy(yyv897, yyv2897)
			}
		} else if yyl897 != len(yyv897) {
			yyv897 = yyv897[:yyl897]
			yyc897 = true
		}
		yyj897 := 0
		for ; yyj897 < yyrr897; yyj897++ {
			yyh897.ElemContainerState(yyj897)
			if r.TryDecodeAsNil() {
				yyv897[yyj897] = Instance{}
			} else {
				yyv898 := &yyv897[yyj897]
				yyv898.CodecDecodeSelf(d)
			}

		}
		if yyrt897 {
			for ; yyj897 < yyl897; yyj897++ {
				yyv897 = append(yyv897, Instance{})
				yyh897.ElemContainerState(yyj897)
				if r.TryDecodeAsNil() {
					yyv897[yyj897] = Instance{}
				} else {
					yyv899 := &yyv897[yyj897]
					yyv899.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj897 := 0
		for ; !r.CheckBreak(); yyj897++ {

			if yyj897 >= len(yyv897) {
				yyv897 = append(yyv897, Instance{}) // var yyz897 Instance
				yyc897 = true
			}
			yyh897.ElemContainerState(yyj897)
			if yyj897 < len(yyv897) {
				if r.TryDecodeAsNil() {
					yyv897[yyj897] = Instance{}
				} else {
					yyv900 := &yyv897[yyj897]
					yyv900.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj897 < len(yyv897) {
			yyv897 = yyv897[:yyj897]
			yyc897 = true
		} else if yyj897 == 0 && yyv897 == nil {
			yyv897 = []Instance{}
			yyc897 = true
		}
	}
	yyh897.End()
	if yyc897 {
		*v = yyv897
	}
}

func (x codecSelfer1234) encSliceInstanceCondition(v []InstanceCondition, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv901 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy902 := &yyv901
		yy902.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceInstanceCondition(v *[]InstanceCondition, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv903 := *v
	yyh903, yyl903 := z.DecSliceHelperStart()
	var yyc903 bool
	if yyl903 == 0 {
		if yyv903 == nil {
			yyv903 = []InstanceCondition{}
			yyc903 = true
		} else if len(yyv903) != 0 {
			yyv903 = yyv903[:0]
			yyc903 = true
		}
	} else if yyl903 > 0 {
		var yyrr903, yyrl903 int
		var yyrt903 bool
		if yyl903 > cap(yyv903) {

			yyrg903 := len(yyv903) > 0
			yyv2903 := yyv903
			yyrl903, yyrt903 = z.DecInferLen(yyl903, z.DecBasicHandle().MaxInitLen, 64)
			if yyrt903 {
				if yyrl903 <= cap(yyv903) {
					yyv903 = yyv903[:yyrl903]
				} else {
					yyv903 = make([]InstanceCondition, yyrl903)
				}
			} else {
				yyv903 = make([]InstanceCondition, yyrl903)
			}
			yyc903 = true
			yyrr903 = len(yyv903)
			if yyrg903 {
				copy(yyv903, yyv2903)
			}
		} else if yyl903 != len(yyv903) {
			yyv903 = yyv903[:yyl903]
			yyc903 = true
		}
		yyj903 := 0
		for ; yyj903 < yyrr903; yyj903++ {
			yyh903.ElemContainerState(yyj903)
			if r.TryDecodeAsNil() {
				yyv903[yyj903] = InstanceCondition{}
			} else {
				yyv904 := &yyv903[yyj903]
				yyv904.CodecDecodeSelf(d)
			}

		}
		if yyrt903 {
			for ; yyj903 < yyl903; yyj903++ {
				yyv903 = append(yyv903, InstanceCondition{})
				yyh903.ElemContainerState(yyj903)
				if r.TryDecodeAsNil() {
					yyv903[yyj903] = InstanceCondition{}
				} else {
					yyv905 := &yyv903[yyj903]
					yyv905.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj903 := 0
		for ; !r.CheckBreak(); yyj903++ {

			if yyj903 >= len(yyv903) {
				yyv903 = append(yyv903, InstanceCondition{}) // var yyz903 InstanceCondition
				yyc903 = true
			}
			yyh903.ElemContainerState(yyj903)
			if yyj903 < len(yyv903) {
				if r.TryDecodeAsNil() {
					yyv903[yyj903] = InstanceCondition{}
				} else {
					yyv906 := &yyv903[yyj903]
					yyv906.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj903 < len(yyv903) {
			yyv903 = yyv903[:yyj903]
			yyc903 = true
		} else if yyj903 == 0 && yyv903 == nil {
			yyv903 = []InstanceCondition{}
			yyc903 = true
		}
	}
	yyh903.End()
	if yyc903 {
		*v = yyv903
	}
}

func (x codecSelfer1234) encSliceBinding(v []Binding, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv907 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy908 := &yyv907
		yy908.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceBinding(v *[]Binding, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv909 := *v
	yyh909, yyl909 := z.DecSliceHelperStart()
	var yyc909 bool
	if yyl909 == 0 {
		if yyv909 == nil {
			yyv909 = []Binding{}
			yyc909 = true
		} else if len(yyv909) != 0 {
			yyv909 = yyv909[:0]
			yyc909 = true
		}
	} else if yyl909 > 0 {
		var yyrr909, yyrl909 int
		var yyrt909 bool
		if yyl909 > cap(yyv909) {

			yyrg909 := len(yyv909) > 0
			yyv2909 := yyv909
			yyrl909, yyrt909 = z.DecInferLen(yyl909, z.DecBasicHandle().MaxInitLen, 512)
			if yyrt909 {
				if yyrl909 <= cap(yyv909) {
					yyv909 = yyv909[:yyrl909]
				} else {
					yyv909 = make([]Binding, yyrl909)
				}
			} else {
				yyv909 = make([]Binding, yyrl909)
			}
			yyc909 = true
			yyrr909 = len(yyv909)
			if yyrg909 {
				copy(yyv909, yyv2909)
			}
		} else if yyl909 != len(yyv909) {
			yyv909 = yyv909[:yyl909]
			yyc909 = true
		}
		yyj909 := 0
		for ; yyj909 < yyrr909; yyj909++ {
			yyh909.ElemContainerState(yyj909)
			if r.TryDecodeAsNil() {
				yyv909[yyj909] = Binding{}
			} else {
				yyv910 := &yyv909[yyj909]
				yyv910.CodecDecodeSelf(d)
			}

		}
		if yyrt909 {
			for ; yyj909 < yyl909; yyj909++ {
				yyv909 = append(yyv909, Binding{})
				yyh909.ElemContainerState(yyj909)
				if r.TryDecodeAsNil() {
					yyv909[yyj909] = Binding{}
				} else {
					yyv911 := &yyv909[yyj909]
					yyv911.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj909 := 0
		for ; !r.CheckBreak(); yyj909++ {

			if yyj909 >= len(yyv909) {
				yyv909 = append(yyv909, Binding{}) // var yyz909 Binding
				yyc909 = true
			}
			yyh909.ElemContainerState(yyj909)
			if yyj909 < len(yyv909) {
				if r.TryDecodeAsNil() {
					yyv909[yyj909] = Binding{}
				} else {
					yyv912 := &yyv909[yyj909]
					yyv912.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj909 < len(yyv909) {
			yyv909 = yyv909[:yyj909]
			yyc909 = true
		} else if yyj909 == 0 && yyv909 == nil {
			yyv909 = []Binding{}
			yyc909 = true
		}
	}
	yyh909.End()
	if yyc909 {
		*v = yyv909
	}
}

func (x codecSelfer1234) encSliceBindingCondition(v []BindingCondition, e *codec1978.Encoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv913 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem1234)
		yy914 := &yyv913
		yy914.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd1234)
}

func (x codecSelfer1234) decSliceBindingCondition(v *[]BindingCondition, d *codec1978.Decoder) {
	var h codecSelfer1234
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv915 := *v
	yyh915, yyl915 := z.DecSliceHelperStart()
	var yyc915 bool
	if yyl915 == 0 {
		if yyv915 == nil {
			yyv915 = []BindingCondition{}
			yyc915 = true
		} else if len(yyv915) != 0 {
			yyv915 = yyv915[:0]
			yyc915 = true
		}
	} else if yyl915 > 0 {
		var yyrr915, yyrl915 int
		var yyrt915 bool
		if yyl915 > cap(yyv915) {

			yyrg915 := len(yyv915) > 0
			yyv2915 := yyv915
			yyrl915, yyrt915 = z.DecInferLen(yyl915, z.DecBasicHandle().MaxInitLen, 64)
			if yyrt915 {
				if yyrl915 <= cap(yyv915) {
					yyv915 = yyv915[:yyrl915]
				} else {
					yyv915 = make([]BindingCondition, yyrl915)
				}
			} else {
				yyv915 = make([]BindingCondition, yyrl915)
			}
			yyc915 = true
			yyrr915 = len(yyv915)
			if yyrg915 {
				copy(yyv915, yyv2915)
			}
		} else if yyl915 != len(yyv915) {
			yyv915 = yyv915[:yyl915]
			yyc915 = true
		}
		yyj915 := 0
		for ; yyj915 < yyrr915; yyj915++ {
			yyh915.ElemContainerState(yyj915)
			if r.TryDecodeAsNil() {
				yyv915[yyj915] = BindingCondition{}
			} else {
				yyv916 := &yyv915[yyj915]
				yyv916.CodecDecodeSelf(d)
			}

		}
		if yyrt915 {
			for ; yyj915 < yyl915; yyj915++ {
				yyv915 = append(yyv915, BindingCondition{})
				yyh915.ElemContainerState(yyj915)
				if r.TryDecodeAsNil() {
					yyv915[yyj915] = BindingCondition{}
				} else {
					yyv917 := &yyv915[yyj915]
					yyv917.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj915 := 0
		for ; !r.CheckBreak(); yyj915++ {

			if yyj915 >= len(yyv915) {
				yyv915 = append(yyv915, BindingCondition{}) // var yyz915 BindingCondition
				yyc915 = true
			}
			yyh915.ElemContainerState(yyj915)
			if yyj915 < len(yyv915) {
				if r.TryDecodeAsNil() {
					yyv915[yyj915] = BindingCondition{}
				} else {
					yyv918 := &yyv915[yyj915]
					yyv918.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj915 < len(yyv915) {
			yyv915 = yyv915[:yyj915]
			yyc915 = true
		} else if yyj915 == 0 && yyv915 == nil {
			yyv915 = []BindingCondition{}
			yyc915 = true
		}
	}
	yyh915.End()
	if yyc915 {
		*v = yyv915
	}
}
